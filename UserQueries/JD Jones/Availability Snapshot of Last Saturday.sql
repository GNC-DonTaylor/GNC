/*
--DBO.GNC_LTS_SNAPSHOT
INSERT INTO DBO.GNC_LTS_SNAPSHOT
SELECT WAREHOUSEID, ITEMCODE, R_ITEM, LOTCODE, SEASONLTS, CAST(GETDATE() AS DATE) AS ASOFDATE
	--CAST (GETDATE()-(DATEPART(DW,GETDATE())%7) AS DATE) AS ASOFDATE	--MOST RECENT SATURDAY'S DATE 
FROM (	SELECT *, DBO.FN_SUPPLYROLLUP(R_ITEM, LEFT(LOTCODE,2), SUBSTRING(LOTCODE,4,2), NULL, NULL) - DBO.FN_DEMANDROLLUP(R_ITEM, LEFT(LOTCODE,2), SUBSTRING(LOTCODE,4,2), NULL) AS SEASONLTS
		FROM (	SELECT WH.IDENTITYID AS WAREHOUSEID, ITM.ROWID AS R_ITEM, ITM.ITEMCODE, VLOT.LOTCODE 
				FROM IMITEM ITM (NOLOCK)
				JOIN IDMASTER WH (NOLOCK) ON WH.ROWID = ITM.R_WAREHOUSE 
				JOIN VW_IMLOTVIEW2 VLOT (NOLOCK) ON VLOT.R_ITEM = ITM.ROWID 
				WHERE VLOT.NETAVAILABLE > 0	AND LEFT(VLOT.LOTCODE,2) = DBO.FN_SALEYEAR(NULL)%100
				) X
		) Y
WHERE SEASONLTS > 0
ORDER BY WAREHOUSEID, ITEMCODE, SUBSTRING(LOTCODE,4,2), LEFT(LOTCODE,2)
*/
SELECT 
	WAREHOUSEID, ITEMCODE, SNAPLOT, SNAPLTS, CURRSUPPLY - CURRDEMAND AS CURRLTS, 
	ALTLOT, SUPPLY, DEMAND, SUPPLY - DEMAND AS ALTLOTLTS, 
	LOCATION, LOCSUPPLY, LOCDEMAND, LOCSUPPLY - LOCDEMAND AS LOCLTS
FROM (
		SELECT
			SNAP.WAREHOUSEID,
			ITM.ITEMCODE, 
			SNAP.LOTCODE AS SNAPLOT,
			SNAP.SEASONLTS AS SNAPLTS,
			DBO.FN_SUPPLYROLLUP(ITM.ROWID, LEFT(SNAP.LOTCODE,2), SUBSTRING(SNAP.LOTCODE,4,2), NULL, NULL) AS CURRSUPPLY,
			DBO.FN_DEMANDROLLUP(ITM.ROWID, LEFT(SNAP.LOTCODE,2), SUBSTRING(SNAP.LOTCODE,4,2), NULL) AS CURRDEMAND,
			VLOT.LOTCODE AS ALTLOT, 
			CAST (VLOT.NETAVAILABLE + VLOT.OUT_ORDERED + VLOT.OUT_SHIPPED + VLOT.OUT_BACKORDER AS INT) AS SUPPLY, 
			CAST (VLOT.OUT_ORDERED + VLOT.OUT_SHIPPED + VLOT.OUT_BACKORDER AS INT) AS DEMAND, 
			LOC.LOCATIONCODE AS LOCATION, 
			CAST (LQS.NETAVAILABLE + LQS.OUT_ORDERED + LQS.OUT_SHIPPED + LQS.OUT_BACKORDER AS INT) AS LOCSUPPLY, 
			CAST (LQS.OUT_ORDERED + LQS.OUT_SHIPPED + LQS.OUT_BACKORDER AS INT) AS LOCDEMAND 


		FROM IMITEM ITM (NOLOCK)
		JOIN GNC_LTS_SNAPSHOT SNAP (NOLOCK) ON SNAP.R_ITEM = ITM.ROWID
		JOIN IDMASTER WH (NOLOCK) ON WH.ROWID = ITM.R_WAREHOUSE
		JOIN VW_IMLOTVIEW2 VLOT (NOLOCK) ON VLOT.R_ITEM = SNAP.R_ITEM AND VLOT.LOTCODE != SNAP.LOTCODE
			AND (SUBSTRING(VLOT.LOTCODE,4,2)!=SUBSTRING(SNAP.LOTCODE,4,2) OR LEFT(VLOT.LOTCODE,2) > LEFT(SNAP.LOTCODE,2))
		JOIN IMLOCATIONQUANTITYSUMMARY LQS (NOLOCK) ON LQS.R_ITEM = ITM.ROWID AND LQS.R_LOT = VLOT.ROWID 
		LEFT JOIN IMLOCATION LOC (NOLOCK) ON LOC.ROWID = LQS.R_LOCATION 
		WHERE VLOT.NETAVAILABLE > 0	--ONLY ALTLOTS WITH QUANTITIES.
		) X
--WHERE SNAPLTS > CURRSUPPLY - CURRDEMAND
--EVENTUALLY WHERE CURRSUPPLY - CURRDEMAND <= 0

ORDER BY 
WAREHOUSEID, ITEMCODE, SUBSTRING(SNAPLOT,4,2), LEFT(SNAPLOT,2), SUBSTRING(ALTLOT,4,2), LEFT(ALTLOT,2), LOCATION


/*
SELECT *--, SEAS_SUPPLY - SEAS_DEMAND AS CURR_SEAS_LTS 
FROM (
		SELECT 
			WH.IDENTITYID AS WAREHOUSEID,
			ITM.ITEMCODE,
			SNAP.LOTCODE,
			VLOT.LOTCODE AS ALTLOT,
			VLOT.NETAVAILABLE,
			--DBO.FN_SUPPLYROLLUP(ITM.ROWID, LEFT(VLOT.LOTCODE,2), SUBSTRING(VLOT.LOTCODE,4,2), NULL, NULL) AS SEAS_SUPPLY, 
			--DBO.FN_DEMANDROLLUP(ITM.ROWID, LEFT(VLOT.LOTCODE,2), SUBSTRING(VLOT.LOTCODE,4,2), NULL) AS SEAS_DEMAND, 
			LOC.LOCATIONCODE, 
			LQS.NETAVAILABLE + LQS.OUT_ORDERED + LQS.OUT_SHIPPED + LQS.OUT_BACKORDER AS LOCSUPPLY, 
			LQS.OUT_ORDERED + LQS.OUT_SHIPPED + LQS.OUT_BACKORDER AS LOCDEMAND, 
			SNAP.SEASONLTS AS PREV_SEAS_LTS 

		FROM GNC_LTS_SNAPSHOT SNAP (NOLOCK)
		JOIN IMITEM ITM (NOLOCK) ON ITM.ROWID = SNAP.R_ITEM
		JOIN IDMASTER WH (NOLOCK) ON WH.ROWID = ITM.R_WAREHOUSE
		JOIN VW_IMLOTVIEW2 VLOT (NOLOCK) ON VLOT.R_ITEM = SNAP.R_ITEM 
		JOIN IMLOCATIONQUANTITYSUMMARY LQS (NOLOCK) ON LQS.R_ITEM = ITM.ROWID AND LQS.R_LOT = VLOT.ROWID 
		JOIN IMLOCATION LOC (NOLOCK) ON LOC.ROWID = LQS.R_LOCATION 

		) X
--WHERE SEAS_SUPPLY - SEAS_DEMAND > 0--<= 0
ORDER BY 
WAREHOUSEID, ITEMCODE, SUBSTRING(LOTCODE,4,2), LEFT(LOTCODE,2), SUBSTRING(ALTLOT,4,2), LEFT(ALTLOT,2), LOCATIONCODE
*/



/*
--Availability Snapshot of Last Saturday
SELECT 
	CAST ( GETDATE() - (DATEPART(DW,GETDATE())%7) AS DATE) AS ASOFDATE, 		--THIS RETURNS THE MOST RECENT SATURDAY'S DATE. IMPORTANT FOR THIS REPORT!
	*, 
	Seas_SUPPLY - Seas_DEMAND AS Seas_LTS 
FROM (
		SELECT 
			WH.IDENTITYID AS WAREHOUSEID,
			ITM.ITEMCODE,
			VLOT.LOTCODE, 
			DBO.FN_SUPPLYROLLUP(ITM.ROWID,SUBSTRING(VLOT.LOTCODE, 1, 2),SUBSTRING(VLOT.LOTCODE,4,2),NULL,NULL) AS Seas_SUPPLY,
			DBO.FN_DEMANDROLLUP(ITM.ROWID,SUBSTRING(VLOT.LOTCODE, 1, 2),SUBSTRING(VLOT.LOTCODE,4,2),NULL) AS Seas_DEMAND, 
			LOC.LOCATIONCODE, 
			LQS.NETAVAILABLE + LQS.OUT_ORDERED + LQS.OUT_SHIPPED + LQS.OUT_BACKORDER AS LOCSUPPLY, 
			LQS.OUT_ORDERED + LQS.OUT_SHIPPED + LQS.OUT_BACKORDER AS LOCDEMAND 

/*
--STOLEN FROM RPT_INVENTORY_BY_ITEM:
FROM OMREVIEWMASTERCODES MC (NOLOCK)
JOIN IMITEM ITM (NOLOCK) ON ITM.ROWID = MC.R_ITEM
JOIN IDMASTER WH (NOLOCK) ON WH.ROWID = ITM.R_WAREHOUSE
JOIN VW_IMLOTVIEW2 VLOT (NOLOCK) ON VLOT.ROWID = MC.R_LOT-- ON VLOT.R_ITEM = ITM.ROWID
JOIN IMLOCATIONQUANTITYSUMMARY LQS (NOLOCK) ON LQS.R_LOT = VLOT.ROWID AND LQS.R_LOCATION = MC.R_LOCATION
LEFT JOIN IMLOCATION LOC (NOLOCK) ON LOC.ROWID = MC.R_LOCATION-- LOC.ROWID = LQS.R_LOCATION
--ELIMINATE INACTIVE MASTERCODES:
--WHERE ISNULL(MC.STATUS, 'A') <> 'I'
*/
		FROM IMITEM ITM (NOLOCK)
		JOIN IDMASTER WH (NOLOCK) ON WH.ROWID = ITM.R_WAREHOUSE 
		JOIN VW_IMLOTVIEW2 VLOT (NOLOCK) ON VLOT.R_ITEM = ITM.ROWID 
		JOIN IMLOCATIONQUANTITYSUMMARY LQS (NOLOCK) ON LQS.R_LOT = VLOT.ROWID 
		LEFT JOIN IMLOCATION LOC (NOLOCK) ON LOC.ROWID = LQS.R_LOCATION

		) X
WHERE Seas_SUPPLY > Seas_DEMAND 
--AND ITEMCODE = '000101.010.1'
ORDER BY 
WAREHOUSEID, ITEMCODE, SUBSTRING(LOTCODE,4,2), SUBSTRING(LOTCODE, 1, 2)
*/



/*
Pseudo-logic: 
If today is not saturday, then query new table for previous saturday records
Otherwise query current iLTS and insert into new table after first deleting any records that exist for this day.

declare @indate as datetime
set @indate = '2023/10/31'--getdate()
select 
datepart(dw,@indate) as dayofweek,
datepart(dw,@indate)%7 as prevsaturday,
@indate - datepart(dw,@indate)%7 as result
*/
