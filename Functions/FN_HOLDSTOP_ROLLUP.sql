------------------------------
-- FUNCTION: FN_HOLDSTOP_ROLLUP (NOT FINISHED WITH THIS)
------------------------------
-- I WILL BE CHANGING THIS FUNCTION TO OPERATE LIKE ALL THE OTHER ROLLUP FUNCTIONS IN THE FUTURE
-- SCANS ALL ITEM/LOTS EQUAL TO OR YOUNGER THAN CURRENT ITEM/LOT
-- IF EVERY RECORD HAS A NON-BLANK HOLDSTOPCODE (UDC_3) THEN RETURN THE DATE LIMITED HOLDSTOP VALUE OF CURRENT RECORD
-- OTHERWISE RETURN A BLANK VALUE.

-- NULL DATE ASSUMES CURRENT DATE USING GETDATE()
--
-- LOGIC: IF CURRENT HOLDSTOP IS 'H' BUT ANY PREVIOUS HOLDSTOP IS BLANK, RETURN BLANK OTHERWISE RETURN CURRENT HOLDSTOP VALUE
--
------------------------------
-- DON TAYLOR @ 03/22/2021
------------------------------
CREATE OR ALTER FUNCTION [DBO].[FN_HOLDSTOP_ROLLUP]
(	@ITMROWID UNIQUEIDENTIFIER,
	@LOTROWID UNIQUEIDENTIFIER,
	@INDATE DATETIME
) RETURNS VARCHAR(10)
AS
BEGIN
	DECLARE @SALEYEAR VARCHAR(2)
	DECLARE @LOTCODE VARCHAR(10)
	DECLARE @LOTYEAR VARCHAR(2)
	DECLARE @LOTSEASON VARCHAR(8)
	DECLARE @BLANKSFOUND INT
	DECLARE @RESULT VARCHAR(1)

	IF @INDATE IS NULL
		SET @INDATE = GETDATE()

	--GET THE CURRENT SALEYEAR
	SET @SALEYEAR = TRIM(STR(DBO.FN_SALEYEAR(NULL)%100))

	--GET THE LOTCODE FOR THE ITEM
	SET @LOTCODE = 
	(	SELECT IMLOT.LOTCODE
		FROM	IMLOT (NOLOCK)
		WHERE	IMLOT.ROWID = @LOTROWID
		AND		IMLOT.R_ITEM = @ITMROWID
	)
	--SET THE LOTYEAR FOR THE SEARCH
	SET @LOTYEAR = SUBSTRING(@LOTCODE,1,2)
	IF @LOTYEAR < @SALEYEAR
		SET @LOTYEAR = @SALEYEAR
	--GET THE LOTSEASON FOR THE ITEM
	SET @LOTSEASON = SUBSTRING(@LOTCODE,3,8)
	--SCAN ALL RECORDS EQUAL TO AND YOUNGER THAN CURRENT LOT FOR BLANK HOLDSTOPCODES
	SET @BLANKSFOUND = 
	(	SELECT COUNT(*)
		FROM	VW_IMLOTVIEW2 VLOT (NOLOCK) 
		WHERE	VLOT.R_ITEM = @ITMROWID
		AND		SUBSTRING(VLOT.LOTCODE,3,8) = @LOTSEASON
		AND		VLOT.LOTCODE <= @LOTCODE
		--AND		VLOT.NETAVAILABLE > 0
		AND		VLOT.USERDEFINEDCODE_3 IS NULL
	)
	IF @BLANKSFOUND > 0
		RETURN NULL
	SET @RESULT = 
	(	SELECT	USERDEFINEDCODE_3
		FROM	IMLOT (NOLOCK)
		WHERE	IMLOT.ROWID = @LOTROWID
		AND		IMLOT.R_ITEM = @ITMROWID
	)
	RETURN @RESULT
END

--TESTING THE LOGIC:
/*
SELECT
ITM.ITEMCODE,
LOT.LOTCODE,
LOT.USERDEFINEDCODE_3 AS HSCODE,
DBO.FN_HOLDSTOP(ITM.ROWID, LOT.ROWID, NULL) AS FN_HOLDSTOP,
(SELECT COUNT(*) FROM IMLOT L2 WHERE SUBSTRING(L2.LOTCODE,3,8) = SUBSTRING(LOT.LOTCODE,3,8)
AND L2.R_ITEM = ITM.ROWID AND L2.LOTCODE <= LOT.LOTCODE AND L2.USERDEFINEDCODE_3 IS NULL
) AS BLANKCOUNT,
DBO.FN_HOLDSTOP_ROLLUP(ITM.ROWID, LOT.ROWID, NULL) AS FN_HOLDSTOPROLLUP
FROM IMITEM ITM
JOIN IMLOT LOT ON LOT.R_ITEM = ITM.ROWID
--WHERE ITM.ITEMCODE = '008319.050.1'--'004065.030.1'
WHERE LOT.USERDEFINEDCODE_3 IS NOT NULL
ORDER BY LOT.LOTCODE, ITM.ITEMCODE
*/