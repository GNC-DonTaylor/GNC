------------------------------ 
-- FUNCTION: FN_DATE2PERIOD 
------------------------------ 
-- RETURNS THE REPORT PERIOD FROM THE DATE PARAMETER PASSED TO IT 
-- NULL DATE ASSUMES CURRENT DATE USING GETDATE() 
------------------------------ 
-- DON TAYLOR @ 05/08/2020 
------------------------------ 
-- EMBEDDED FN_YEAR2DATE() & FN_DATE2YEAR() LOGIC TO REDUCE FUNCTION DAISY CHAINS @10/14/21-DT 
------------------------------ 
CREATE OR ALTER FUNCTION [DBO].[FN_DATE2PERIOD] 
( @INDATE DATETIME 
) RETURNS INTEGER 
AS 
BEGIN 

--CALCULATIONS: 
--((@WEEKCOUNT - 1) % 4) + 1 AS WEEK, 
--FLOOR((@WEEKCOUNT - 1)/4) + 1 AS PERIOD 

	-- LOCAL PARAMETERS -- 
	DECLARE @DATE		DATETIME 
	DECLARE @STARTDATE	DATETIME 
	DECLARE @YEAR		INTEGER 
	DECLARE @WEEKCOUNT	INTEGER 
	DECLARE @RESULT		INTEGER 
	IF @INDATE IS NULL 
		SET @INDATE = GETDATE() 

	BEGIN 
		/* EMBEDDED CODE SECTION */ 
		--FN_DATE2YEAR() CODE: 
			--GET NEXT YEAR'S STARTDATE BASED UPON THE YEAR OF THE PASSED DATE FIELD: 
			--FN_YEAR2DATE()+1 CODE: WE ARE PASSING NEXT YEAR VALUE, BE AWARE: 
				SET @DATE = '08/01/' + TRIM(STR(YEAR(@INDATE)))				--AUG 1ST DATE OF NEXT YEAR 
				SET @STARTDATE = DATEADD(D, 1-(DATEPART(DW, @DATE)), @DATE)	--START OF WEEK 1 
			-- CHOOSE CURRENT YEAR'S STARTDATE IF THIS DATE IS IN THE FUTURE: 
			IF @STARTDATE > @INDATE 
				BEGIN 
					--GET CURRENT YEAR'S STARTDATE BASED UPON THE YEAR OF THE PASSED DATE FIELD: 
					--FN_YEAR2DATE() CODE: 
						SET @DATE = '08/01/' + TRIM(STR(YEAR(@INDATE)-1))			--AUG 1ST DATE OF CURRENT YEAR 
						SET @STARTDATE = DATEADD(D, 1-(DATEPART(DW, @DATE)), @DATE)	--START OF WEEK 1 
				END 
			--ADD ONE YEAR TO STARTDATE TO GET THE YEAR OF THE ENDDATE: 
			SET @YEAR = YEAR(@STARTDATE)+1 
		--FN_YEAR2DATE() CODE: 
			SET @DATE = '08/01/' + TRIM(STR(@YEAR-1))					--AUG 1ST DATE OF CURRENT YEAR 
			SET @STARTDATE = DATEADD(D, 1-(DATEPART(DW, @DATE)), @DATE)	--START OF WEEK 1 
		/* EMBED @STARTDATE INTO @WEEKCOUNT TO REDUCE DAISY CHAINED FUNCTIONS*/ 
		----------------------------------------------------------- 
		SET @WEEKCOUNT = (DATEDIFF(D, @STARTDATE, @INDATE) / 7) + 1 
		--SET @WEEKCOUNT = (DATEDIFF(D, DBO.FN_YEAR2DATE(DBO.FN_DATE2YEAR(@INDATE)), @INDATE) / 7) + 1 

		-- ARBITRARY RULE: WEEKOFYEAR 53 TRANSLATES TO PERIOD 13 
		IF @WEEKCOUNT = 53 --FORCE RESULT FROM PERIOD 14/WEEK 1 TO PERIOD 13/WEEK 5 
			SET @RESULT = 13 
		ELSE --CONVERT WEEKS TO PERIOD (1-13) 
			SET @RESULT = FLOOR((@WEEKCOUNT - 1)/4) + 1 
	END 
	RETURN @RESULT 
END 
