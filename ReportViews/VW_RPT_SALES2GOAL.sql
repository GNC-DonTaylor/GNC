/* 

--SALES2GOAL REP	RT- 4:09 (13,861 REC)
SELECT * 
FROM VW_RPT_SALES2GOAL (NOLOCK) 
WHERE COMPANYID = 'SB' 
------- 
AND WAREHOUSEID = '10' 
AND SALEYEAR = 2022
AND SALESREPID = 'S10'

--SALES2GOAL REP SUMMARY 
SELECT * 
FROM VW_RPT_SALES2GOAL (NOLOCK) 
WHERE MAJORACCOUNT IS NULL 
------- 
AND ISCURRYEAR = 'Y'														--RT- 3:12 (1,422 ROWS)--3:16 (5,399 REC)
AND TRANSACTIONDATE BETWEEN '08/01/2021' AND '10/23/2021'					--RT- 2:01 (1,067 ROWS)--7:07 (4,389 REC)
AND SALEYEAR = 2022 
AND (TRANSACTIONDATE BETWEEN '08/01/2021' AND '10/23/2021' OR PERIOD = 0)	--RT- 4:40 (1,162 ROWS)--9:12 (4,484 REC)


--SALES2GOAL MAJOR 
--SALES2GOAL MAJOR SUMMARY 
SELECT * 
FROM VW_RPT_SALES2GOAL_MAJOR (NOLOCK) 
WHERE MAJORACCOUNT IS NOT NULL 
*/ 
CREATE OR ALTER VIEW [DBO].[VW_RPT_SALES2GOAL] 
AS 
SELECT R.*, 
	--This swaps the SALESREPNAME back to what it was in ePLANT so Salesreps display in the same order: 
	--The exception is that Casy Rufener has taken over for Jack Klomp Jr. (This will be out of order) 
	IIF (CHARINDEX(',', SALESREPNAME) > 0, 
			RIGHT(REPLACE(SALESREPNAME, 'Tony', 'Anthony'), LEN(REPLACE(SALESREPNAME, 'Tony', 'Anthony'))-CHARINDEX(',',SALESREPNAME)-1) 
					+ ' ' + LEFT(SALESREPNAME, CHARINDEX(',',SALESREPNAME)-1), 
			SALESREPNAME ) AS REPSORTNAME, 
	(ACTUALNET + RESERVENET + ORDERNET) - GOALNET AS RESULTNET 
FROM	( 
		SELECT 
			U.COMPANYID, U.COMPANYNAME, U.RECORDTYPE, 
			U.SALEYEAR, U.PERIOD, U.TRANSACTIONDATE, 
			IIF(U.SALEYEAR = DBO.FN_DATE2YEAR(NULL),'Y', NULL) AS ISCURRYEAR, 
			(	SELECT STATE FROM IDMASTER (NOLOCK) 
				JOIN IDADDRESS (NOLOCK) ON IDADDRESS.ROWID = R_DEFAULTADDRESS 
				WHERE IDMASTER.IDENTITYID = U.WAREHOUSEID) AS WAREHOUSETEXT, 
			U.WAREHOUSEID, TRIM(U.WAREHOUSENAME) AS WAREHOUSENAME, 
			U.SALESREPID, U.SALESREPNAME, 
			IIF(U.MAJORACCOUNT = 'Y', 'Major Accts', 'Independents') AS MAJORTEXT, 
			NULLIF(U.MAJORACCOUNT, 'N') AS MAJORACCOUNT, 
			SUM(U.RESERVEGROSS+U.RESERVEDISCOUNT) AS RESERVENET, 
			SUM(U.ORDERGROSS+U.ORDERDISCOUNT) AS ORDERNET, 
			SUM(U.ACTUALGROSS+U.ACTUALDISCOUNT) AS ACTUALNET, 
			SUM(U.GOALGROSS+U.GOALDISCOUNT) AS GOALNET 
		FROM	( 
					--ACTUALS AND GOALS SECTION: 
					SELECT 
						V.COMPANYID, 'Greenleaf Nursery Company' AS COMPANYNAME, V.RECORDTYPE, 
						V.SALEYEAR, V.PERIOD, V.TRANSACTIONDATE, 
						V.WAREHOUSEID, V.WAREHOUSENAME, 
						V.SALESREPID, V.SALESREPNAME, 
						V.NATIONALACCOUNT AS MAJORACCOUNT, 
						0 AS RESERVEGROSS,	0 AS RESERVEDISCOUNT, 
						0 AS ORDERGROSS, 0 AS ORDERDISCOUNT, 
						IIF(V.REPORTGROUP = 1, ISNULL(V.CURRAMOUNT, 0), 0) AS ACTUALGROSS, 
						IIF(V.REPORTGROUP IN (2,3), ISNULL(V.CURRAMOUNT, 0), 0) AS ACTUALDISCOUNT, 
						IIF(V.REPORTGROUP = 1, ISNULL(V.GOALAMOUNT, 0), 0) AS GOALGROSS, 
						IIF(V.REPORTGROUP IN (2,3), ISNULL(V.GOALAMOUNT, 0), 0) AS GOALDISCOUNT 
					FROM VW_RPT_SQL_SALES2GOAL V (NOLOCK) 
					WHERE (V.CURRAMOUNT <> 0 OR V.GOALAMOUNT <> 0) 
					AND V.REPORTGROUP < 4 

					UNION ALL 

					--ORDERS AND RESERVES SECTION: 
					SELECT 
						X.COMPANYID, TRIM(X.COMPANYNAME), X.RECORDTYPE, 
						X.SALEYEAR, X.PERIOD, X.TRANSACTIONDATE, 
						X.WAREHOUSEID, X.WAREHOUSENAME, 
						X.SALESREPID, X.SALESREPNAME, 
						X.MAJORACCOUNT, 
						--ADDDING SERVICECHARGE TO RESERVES AND ORDERS SO THAT SAM'S TOTALS ARE WHAT THEY EXPECT:
						X.ISRESERVE * ((X.UNITPRICE + X.SERVICECHARGE) * X.QUANTITYATSTAGE) AS RESERVEGROSS, 
						X.ISRESERVE * (((X.UNITPRICE + X.SERVICECHARGE) * X.QUANTITYATSTAGE) - X.AMOUNT) AS RESERVEDISCOUNT, 
						X.ISORDER * ((X.UNITPRICE + X.SERVICECHARGE) * X.QUANTITYATSTAGE) AS ORDERGROSS, 
						X.ISORDER * (((X.UNITPRICE + X.SERVICECHARGE) * X.QUANTITYATSTAGE) - X.AMOUNT) AS ORDERDISCOUNT, 
						--X.ISRESERVE * (X.UNITPRICE * X.QUANTITYATSTAGE) AS RESERVEGROSS, 
						--X.ISRESERVE * ((X.UNITPRICE * X.QUANTITYATSTAGE) - X.AMOUNT) AS RESERVEDISCOUNT, 
						--X.ISORDER * (X.UNITPRICE * X.QUANTITYATSTAGE) AS ORDERGROSS, 
						--X.ISORDER * ((X.UNITPRICE * X.QUANTITYATSTAGE) - X.AMOUNT) AS ORDERDISCOUNT, 
						0 AS ACTUALGROSS, 0 AS ACTUALDISCOUNT, 
						0 AS GOALGROSS, 0 AS GOALDISCOUNT

					FROM	( 
								SELECT 
									CO.COMPANYID, CO.NAME AS COMPANYNAME, OH.RECORDTYPE, 
									DBO.FN_DATE2YEAR(OH.SHIPPINGDATE) AS SALEYEAR, 
									0 AS PERIOD, --DBO.FN_DATE2PERIOD(OH.SHIPPINGDATE) AS PERIOD, 
									NULL AS TRANSACTIONDATE, --OH.SHIPPINGDATE AS TRANSACTIONDATE, 
									WH.IDENTITYID AS WAREHOUSEID, 
									WH.NAME AS WAREHOUSENAME, 
									TRIM(PART.IDENTITYID) AS SALESREPID, 
									TRIM(PART.NAME) AS SALESREPNAME, 
									ICUST.USERDEFINEDCODE_8 AS MAJORACCOUNT, 
									IIF (OH.STAGE = 'N' AND OH.USERDEFINEDCODE_2 = 'RESERVE', 1, 0) AS ISRESERVE, 
									IIF (OH.STAGE = 'N' AND OH.USERDEFINEDCODE_2 = 'RESERVE', 0, 1) AS ISORDER, 
									ISNULL(OD.AMOUNT,0) AS AMOUNT, 
									ISNULL(OD.UNITPRICE,0) AS UNITPRICE, 
									ISNULL(OD.TAGGINGCHARGEPERITEM,0) AS SERVICECHARGE, 
									--ISNULL(OD.EFFECTIVEFREIGHT,0) AS EFFECTIVEFREIGHT, 
									IIF(CHARINDEX(OH.STAGE,'A;S;C')>0, ISNULL(OD.QUANTITYSHIPPED,0), ISNULL(OD.QUANTITYORDERED,0)) AS QUANTITYATSTAGE 
								FROM OMTRANSACTIONHEADER OH (NOLOCK) 
								JOIN OMTRANSACTIONDETAIL OD (NOLOCK) ON OD.R_TRANSACTIONHEADER = OH.ROWID 
								JOIN IDMASTER WH (NOLOCK) ON WH.ROWID = OH.R_FMSHIPPER 
								JOIN IDMASTER PART (NOLOCK) ON PART.ROWID = OH.R_SALESPERSON_1 
								JOIN IDMASTER CUST (NOLOCK) ON CUST.ROWID = OH.R_CUSTOMER 
								JOIN IDCUSTOMER ICUST (NOLOCK) ON ICUST.R_IDENTITY = CUST.ROWID 
								JOIN ABCOMPANY CO (NOLOCK) ON CO.COMPANYID = OH.COMPANYID 
								WHERE OH.RECORDTYPE = 'R' AND OH.STAGE NOT IN ('L','F') AND OH.TRANSACTIONTYPE = 'I'
					) X 
				) U 

		GROUP BY 
			U.COMPANYID, U.COMPANYNAME, U.RECORDTYPE, 
			U.SALEYEAR,	U.PERIOD, U.TRANSACTIONDATE, --CAST(TRANSACTIONDATE AS DATE) IS DONE IN: VW_RPT_SQL_SALES2GOAL SO NO NEED TO DO SO HERE. 
			U.WAREHOUSEID, U.WAREHOUSENAME, 
			U.SALESREPID, U.SALESREPNAME, 
			U.MAJORACCOUNT
		) R 