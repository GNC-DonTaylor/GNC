/*
--KIM JOHNSON Query- DT 12/15/23
SELECT * 
FROM VW_RPT_TAGS (NOLOCK) 
WHERE OUT_SHIPPED > 0 
and shippercode = '40'
and tripdate between '03/01/2023' and '05/31/2023'

--138 TAG REPORT
SELECT * 
FROM VW_RPT_TAGS (NOLOCK) 
WHERE OUT_SHIPPED > 0 

and tripno = 't07979'
--test in test that users were getting error producing from PTR:
and omtransactionheaderrowid in ('39bdc7c6-d77f-4c48-8e4b-e51d817d3e45')
ORDER BY
SHIPPERCODE, TRIPNO, TAGCODE, PICKSEQUENCE, PLANTGROUPCODE, GENUSCODE, BINNUMBER, BOTANICALNAME

--138 TAG REPORT REPRINT
SELECT * 
FROM VW_RPT_TAGS (NOLOCK) 
WHERE ISREPRINT = 'Y' 
AND OUT_SHIPPED > 0 

--REVIEWSTAGE IN ('PICKED','PRINTED','PICK CONFIRMED','ADD-ON')
ORDER BY
SHIPPERCODE, TRIPNO, TAGCODE, PICKSEQUENCE, PLANTGROUPCODE, GENUSCODE, BINNUMBER, BOTANICALNAME

--49 EARLY TAG REPORT
SELECT * 
FROM VW_RPT_TAGS (NOLOCK) 
WHERE ISEARLY='Y' 
AND OUT_SHIPPED > 0 

--ISNULL(REVIEWSTAGE, 'REVIEW PENDING') IN ('PICKED','REVIEW PENDING') 
ORDER BY
SHIPPERCODE, TRIPNO, TAGCODE, PICKSEQUENCE, PLANTGROUPCODE, GENUSCODE, BINNUMBER
*/
CREATE OR ALTER VIEW [DBO].[VW_RPT_TAGS]
AS
SELECT 
TH.RECORDTYPE,
OH.REVIEWSTAGE,
IIF(OH.REVIEWSTAGE IN ('PICKED','PRINTED','PICK CONFIRMED','ADD-ON'), 'Y', NULL) AS ISREPRINT,
IIF(ISNULL(OH.REVIEWSTAGE, 'REVIEW PENDING') IN ('PICKED','REVIEW PENDING'), 'Y', NULL) AS ISEARLY,
OD.USERDEFINEDCOMMENT AS TAGDEPTNOTE,
--THIS RETURNS MULTIPLE RECORDS SO I NEED TO DECIDE IF/HOW TO IMPLEMENT THE CHANGE THAT ELLEN WANTS:
--(SELECT OUT_SHIPPED FROM IMTRANSACTIONLOCATION IL (NOLOCK) WHERE IL.R_TRANSACTIONDETAIL = OD.ROWID) AS OUT_SHIPPED,
IL.OUT_SHIPPED,
OH.TRANSACTIONNUMBER,  
SHIP.IDENTITYID AS SHIPPERCODE,
SHIP.NAME AS SHIPPERNAME,
CONS.NAME AS CONSIGNEENAME,
CONS.IDENTITYID AS CONSIGNEECODE,
ICONS.USERDEFINEDCODE_10 AS TAGCODE,
CODES.DESCRIPTION_1 AS TAGDESCRIPTION, 
TRIPNO,
PLANSTART AS TRIPDATE,
(SELECT TOP 1 LOC.LOCATIONCODE FROM IMITEM I (NOLOCK) 
LEFT JOIN IDMASTER W (NOLOCK) ON W.ROWID = I.R_WAREHOUSE 
LEFT JOIN IMTRANSACTIONLOCATION  T_LOC (NOLOCK) ON T_LOC.R_ITEM=I.ROWID
LEFT JOIN IMLOCATION LOC (NOLOCK) ON LOC.ROWID= T_LOC.R_LOCATION
WHERE W.IDENTITYID ='TAG_'+SHIP.IDENTITYID AND I.ITEMCODE= RTRIM(ITM.ITEMCODE) +'.'+ ICONS.USERDEFINEDCODE_10) AS BINNUMBER,	--IS THIS THE BIN LOCATION FIELD?
(SELECT TOP 1 LOC.PICKSEQUENCE FROM IMITEM I (NOLOCK) 
LEFT JOIN IDMASTER W (NOLOCK) ON W.ROWID = I.R_WAREHOUSE 
LEFT JOIN IMTRANSACTIONLOCATION  T_LOC (NOLOCK) ON T_LOC.R_ITEM=I.ROWID
LEFT JOIN IMLOCATION LOC (NOLOCK) ON LOC.ROWID= T_LOC.R_LOCATION
WHERE W.IDENTITYID ='TAG_'+SHIP.IDENTITYID AND I.ITEMCODE= RTRIM(ITM.ITEMCODE) +'.'+ ICONS.USERDEFINEDCODE_10) AS PICKSEQUENCE,
(SELECT TOP 1 LOC.LOCATIONCODE 
FROM IMLOCATION LOC (NOLOCK)
WHERE LOC.ROWID= IL.R_LOCATION) AS LOCATIONCODE, --added for Kim Johnson: 12/15/23 DT
--PRODUCT NAME--
ITM.REFERENCE_1 AS COMMONNAME, 
' ' + ITM.USERDEFINEDREFERENCE_1 AS PATENTNAME,
ITM.REFERENCE_2 AS BOTANICALNAME, 
PGC.PRODUCTCATEGORYCODE,
SUBSTRING(PGC.PRODUCTCATEGORYCODE,1,3) AS PLANTGROUPCODE,
ITM.USERDEFINEDCODE_1 AS GENUSCODE,
GEN.DESCRIPTION_1 AS GENUSNAME,
ITM.ITEMCODE,
IIF(ITM.SUBCLASSCODE=2,'PROMO',NULL) AS PROMO,
--DBO.FN_FORMATUPC(PSD.ROWID, ITM.R_WAREHOUSE, ITM.ROWID) AS UPC,
DBO.FN_FORMATUPC(PSD.R_PRICESCHEDULEHEADER, ITM.R_WAREHOUSE, ITM.ROWID) AS UPC,
--ISNULL(CONVERT(VARCHAR(20),PSD.COMMENT), ITM.ITEMSUPCCODE) AS UPC1, 
ISNULL(PSD.ALTERNATESKU ,'') AS SKU,
--PRODUCTNAME--
PART.IDENTITYID SALESPERSONCODE,
PART.NAME AS SALESPERSONNAME,
OH.REVIEWSTAGE AS PTRREVIEWSTAGE,
--CONTAINERPRINTDESCRIPTION
CNT.PRINTEDCONTAINERCODE CONTAINERPRINT,
NULLIF(TRIM(CONVERT(VARCHAR(256),OD.COMMENT)),'') AS PICKNOTE ,--DESCRIPTION
--CONTAINERPRINTDESCRIPTION
OD.QUANTITYORDERED,
OD.QUANTITYSHIPPED AS ACTUAL,
TD.DELSTOPNO AS DROPNUMBER,
CUST.IDENTITYID CUSTOMERCODE, 
CUST.NAME CUSTOMERNAME, 
PSD.RETAILPRICE  AS RETAILPRICE,
ITM.DESCRIPTION_1 AS SHORT_COMMON,
ITM.DESCRIPTION_2 AS ABBR_BOTANICAL, 
TH.STATUS, 
ITM.REFERENCE_3 AS REVERSECOMMONNAME,
CNT.CONTAINERSORT,
ITM.SUBCLASSCODE ,
ITM.REFERENCE_5 AS SORTNAME, 
--ITM.USERDEFINEDCODE_1 AS GENUS,
ICUST.IMCRGROUP,
TH.COMPANYID, 
ITM.USERDEFINEDCODE_2 AS BRAND,
ITM.USERDEFINEDCODE_12 AS [BRAND POT],
ITM.USERDEFINEDCODE_13 AS BRANDTEXT,	--per SC 6/14/21 use Brand Tag Req field instead
--also don't use Ellen's logic (below) either:
--ISNULL(NULLIF(ITM.USERDEFINEDCODE_13,'NONE'),ITM.USERDEFINEDCODE_2) AS BRANDTEXT,
OH.ROWID AS OMTRANSACTIONHEADERROWID, 
OD.ROWID AS OMTRANSACTIONDETAILROWID 
FROM FMTRIPHEADER TH (NOLOCK) 
LEFT JOIN FMTRIPDETAIL TD (NOLOCK) ON TD.R_TRIPHEADER = TH.ROWID
LEFT JOIN FMDISPATCHOBJECT DO (NOLOCK) ON DO.ROWID= TD.R_FMDISPATCHOBJECT 
LEFT JOIN OMTRANSACTIONHEADER OH (NOLOCK) ON OH.ROWID=DO.R_SOURCEID
LEFT JOIN OMTRANSACTIONDETAIL OD (NOLOCK) ON OD.R_TRANSACTIONHEADER =OH .ROWID 
--THIS WILL INTRODUCE MULTIPLE RECORDS TO THE CURRENT DATASET, ELLEN WANTS THIS TO REPORT ON OUT_SHIPPED
LEFT JOIN IMTRANSACTIONLOCATION IL (NOLOCK) ON IL.R_TRANSACTIONDETAIL = OD.ROWID
--
LEFT JOIN IMITEM ITM (NOLOCK) ON ITM.ROWID = OD.R_ITEM
LEFT JOIN IDMASTER PART (NOLOCK) ON PART.ROWID = OH.R_SALESPERSON_1
LEFT JOIN IDMASTER CUST (NOLOCK) ON CUST.ROWID = OH.R_CUSTOMER
LEFT JOIN IDCUSTOMER ICUST (NOLOCK) ON ICUST.R_IDENTITY = CUST.ROWID
LEFT JOIN IDMASTER SHIP (NOLOCK) ON SHIP.ROWID = DO.R_SHIPPER 
LEFT JOIN IDMASTER CONS (NOLOCK) ON CONS.ROWID = OH.R_SHIPPER--ICONS.R_IDENTITY
LEFT JOIN IDCONSIGNEE ICONS (NOLOCK) ON ICONS.R_IDENTITY = CONS.ROWID--OH.R_SHIPPER
LEFT JOIN IDCODES CODES (NOLOCK)  ON CODES.CODE = ICONS.USERDEFINEDCODE_10 AND CODES.CODETYPE='81'	--TAGDESCRIPTION
LEFT JOIN IMCODES GEN (NOLOCK) ON GEN.CODE = ITM.USERDEFINEDCODE_1 AND GEN.CODETYPE = '11'	--GENUSNAME
LEFT JOIN IMCONTAINER CNT (NOLOCK) ON CNT.ROWID = ITM.R_CONTAINERCODE
LEFT JOIN IMPRODUCTCATEGORY PGC (NOLOCK) ON PGC.ROWID = ITM.R_PRODUCTCATEGORY
LEFT JOIN IDCONSIGNEESHIPPERZONE CSZ (NOLOCK) ON CSZ.R_CONSIGNEE = OH.R_SHIPPER AND CSZ.R_SHIPPER = OH.R_FMSHIPPER
LEFT JOIN IMPRICESCHEDULEDETAIL PSD (NOLOCK) ON PSD.R_ITEM = OD.R_ITEM AND PSD.R_PRICESCHEDULEHEADER=CSZ.R_PRICESCHEDULE 
WHERE TH.RECORDTYPE<>'P'

/* SAVING THIS SCRIPT FOR POSTERITY SAKE ONLY
private void Detail_BeforePrint(object sender, System.Drawing.Printing.PrintEventArgs e) {
string brand ="";
string brandPot = "";

brand = GetCurrentColumnValue("BRAND").ToString().Trim();
brandPot = GetCurrentColumnValue("BRAND POT").ToString().Trim();

	if(string.IsNullOrEmpty(brandPot))
	{
		if(!string.IsNullOrEmpty(brand))
		{
			lblBrand.Text = brand;
		}
		else
		{
			lblBrand.Text ="";
		}
	}
	else if(brandPot.ToUpper()=="NONE")
	{
		if(!string.IsNullOrEmpty(brand))
		{
			lblBrand.Text = brand ;
		}
		else
		{
			lblBrand.Text ="";
		}
	}
	else
	{
		lblBrand.Text = brandPot;
	}

}
*/