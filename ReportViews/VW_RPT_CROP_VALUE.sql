/* RUNTIME- 1:20 
--73 Crop Value Report [Re-spec of the Inventory Status Report] 
-- 
--	SOLDCROP NOW CALCULATED AS (DEMANDROLLUP + [CURRENTYEAR]SHIPPEDBYCYCLE) 
--	SALEABLECROP NOW CALCULATED AS (SUPPLYROLLUP + [CURRENTYEAR]SHIPPEDBYCYCLE) 
--	SHIPPEDBYCYCLE IS FOR CURRENTYEAR SHIPMENTS ONLY SO 
--		PY CALCULATIONS ARE SIMPLY THE SUPPLYROLLUP QUANTITY. 
-- 
--  UPDATE NOTE: I HAVE TRANSITIONED OVER TO FN_SHIPPEDBYCYCLE WHICH DOES NOT NEED TO PASS A SEASON WILDCARD. 
--				INSTEAD OF CHANGING THE PARAMETERS, (I'M LAZY), I CHANGED THE LENGTH OF THE @INSEASON PARAMETER IN THE FUNCTION. 
--				THE % GETS TRUNCATED IN THE PROCESS SO IT DOESN'T MATTER NOW. - DT 

SELECT * 
FROM VW_RPT_CROP_VALUE (NOLOCK) 
WHERE SHIFT_TOT_SUPPLY + PROP_TOT_SUPPLY + CULLS_TOT_SUPPLY + FSU_TOT_SALEABLE + FSU_TOT_HS <> 0 
---------------------------------- 
--AND ITEMCODE = '001993.031.1' 
*/ 
CREATE OR ALTER VIEW [DBO].[VW_RPT_CROP_VALUE] 
AS 
SELECT 
	*, 
	--SALEABLECROP QUANTITIES = (SUPPLY + [CURRENTYEAR]SHIPPEDBYCYCLE) 
	(FALL_CY_SUPPLY + FSHIPPED) AS FALL_CY_SALEABLE, 
	(SPRING_CY_SUPPLY + SSHIPPED) AS SPRING_CY_SALEABLE, 
	(SUMMER_CY_SUPPLY + USHIPPED) AS SUMMER_CY_SALEABLE, 
	FALL_PY_SALEABLE + (FALL_CY_SUPPLY + FSHIPPED) AS FALL_TOT_SALEABLE, 
	SPRING_PY_SALEABLE + (SPRING_CY_SUPPLY + SSHIPPED) AS SPRING_TOT_SALEABLE, 
	SUMMER_PY_SALEABLE + (SUMMER_CY_SUPPLY + USHIPPED) AS SUMMER_TOT_SALEABLE, 
	--EXCLUDING U3 IS UP IN THE AIR STILL: 
	(FALL_PY_SALEABLE + SPRING_PY_SALEABLE + SUMMER_PY_SALEABLE) AS FSU_PY_SALEABLE,	--PER ELLEN 
	((FALL_CY_SUPPLY + FSHIPPED) + (SPRING_CY_SUPPLY + SSHIPPED) + (SUMMER_CY_SUPPLY + USHIPPED)) AS FSU_CY_SALEABLE,	--PER ELLEN 
	(FALL_PY_SALEABLE + SPRING_PY_SALEABLE + SUMMER_PY_SALEABLE) + 
	((FALL_CY_SUPPLY + FSHIPPED) + (SPRING_CY_SUPPLY + SSHIPPED) + (SUMMER_CY_SUPPLY + USHIPPED)) AS FSU_TOT_SALEABLE, --PER ELLEN 
	--IF WE DECIDE TO EXCLUDE U3 USE THESE CALCULATIONS: 
	--(FALL_PY_SALEABLE + SPRING_PY_SALEABLE + SUMMER_PY_SALEABLE - SUMMER3_PY_SALEABLE) AS FSU_PY_SALEABLE,	--PER ELLEN 
	--((FALL_CY_SUPPLY + FSHIPPED) + (SPRING_CY_SUPPLY + SSHIPPED) + (SUMMER_CY_SUPPLY - SUMMER3_CY_SUPPLY + USHIPPED)) AS FSU_CY_SALEABLE,	--PER ELLEN 
	--(FALL_PY_SALEABLE + SPRING_PY_SALEABLE + SUMMER_PY_SALEABLE - SUMMER3_PY_SALEABLE) + 
	--((FALL_CY_SUPPLY + FSHIPPED) + (SPRING_CY_SUPPLY + SSHIPPED) + (SUMMER_CY_SUPPLY - SUMMER3_CY_SUPPLY + USHIPPED)) AS FSU_TOT_SALEABLE, --PER ELLEN 
	(SHIFT_TOT_SUPPLY + PROP_TOT_SUPPLY + CULLS_TOT_SUPPLY) + (FALL_PY_SALEABLE + SPRING_PY_SALEABLE + SUMMER_PY_SALEABLE) + 
	((FALL_CY_SUPPLY + FSHIPPED) + (SPRING_CY_SUPPLY + SSHIPPED) + (SUMMER_CY_SUPPLY + USHIPPED)) AS GRAND_TOTAL, --PER DONNY 

	--SALEABLECROP VALUES = LISTPRICE * (SUPPLY + [CURRENTYEAR]SHIPPEDBYCYCLE) 
	LISTPRICE * FALL_PY_SALEABLE AS FALL_PY_SALEABLE_VALUE, 
	LISTPRICE * (FALL_CY_SUPPLY + FSHIPPED) AS FALL_CY_SALEABLE_VALUE, 
	LISTPRICE * (FALL_PY_SALEABLE + (FALL_CY_SUPPLY + FSHIPPED)) AS FALL_TOT_SALEABLE_VALUE, 
	LISTPRICE * SPRING_PY_SALEABLE AS SPRING_PY_SALEABLE_VALUE, 
	LISTPRICE * (SPRING_CY_SUPPLY + SSHIPPED) AS SPRING_CY_SALEABLE_VALUE, 
	LISTPRICE * (SPRING_PY_SALEABLE + (SPRING_CY_SUPPLY + SSHIPPED)) AS SPRING_TOT_SALEABLE_VALUE, 
	LISTPRICE * SUMMER_PY_SALEABLE AS SUMMER_PY_SALEABLE_VALUE, 
	LISTPRICE * (SUMMER_CY_SUPPLY + USHIPPED) AS SUMMER_CY_SALEABLE_VALUE, 
	LISTPRICE * (SUMMER_PY_SALEABLE + (SUMMER_CY_SUPPLY + USHIPPED)) AS SUMMER_TOT_SALEABLE_VALUE, 
	--EXCLUDING U3 IS UP IN THE AIR STILL: 
	LISTPRICE * (FALL_PY_SALEABLE + SPRING_PY_SALEABLE + SUMMER_PY_SALEABLE) AS FSU_PY_SALEABLE_VALUE,	--PER ELLEN 
	LISTPRICE * ((FALL_CY_SUPPLY + FSHIPPED) + (SPRING_CY_SUPPLY + SSHIPPED) + (SUMMER_CY_SUPPLY + USHIPPED)) AS FSU_CY_SALEABLE_VALUE,	--PER ELLEN 
	LISTPRICE * ((FALL_PY_SALEABLE + SPRING_PY_SALEABLE + SUMMER_PY_SALEABLE) + 
				((FALL_CY_SUPPLY + FSHIPPED) + (SPRING_CY_SUPPLY + SSHIPPED) + (SUMMER_CY_SUPPLY + USHIPPED))) AS FSU_TOT_SALEABLE_VALUE, --PER ELLEN 
	--IF WE DECIDE TO EXCLUDE U3 USE THESE CALCULATIONS: 
	--LISTPRICE * (FALL_PY_SALEABLE + SPRING_PY_SALEABLE + SUMMER_PY_SALEABLE - SUMMER3_PY_SALEABLE) AS FSU_PY_SALEABLE_VALUE,	--PER ELLEN 
	--LISTPRICE * ((FALL_CY_SUPPLY + FSHIPPED) + (SPRING_CY_SUPPLY + SSHIPPED) + (SUMMER_CY_SUPPLY - SUMMER3_CY_SUPPLY + USHIPPED)) AS FSU_CY_SALEABLE_VALUE,	--PER ELLEN 
	--LISTPRICE * ((FALL_PY_SALEABLE + SPRING_PY_SALEABLE + SUMMER_PY_SALEABLE - SUMMER3_PY_SALEABLE) + 
	--			((FALL_CY_SUPPLY + FSHIPPED) + (SPRING_CY_SUPPLY + SSHIPPED) + (SUMMER_CY_SUPPLY - SUMMER3_CY_SUPPLY + USHIPPED))) AS FSU_TOT_SALEABLE_VALUE, --PER ELLEN 
	LISTPRICE * ((SHIFT_TOT_SUPPLY + PROP_TOT_SUPPLY + CULLS_TOT_SUPPLY) + (FALL_PY_SALEABLE + SPRING_PY_SALEABLE + SUMMER_PY_SALEABLE) + 
				((FALL_CY_SUPPLY + FSHIPPED) + (SPRING_CY_SUPPLY + SSHIPPED) + (SUMMER_CY_SUPPLY + USHIPPED))) AS GRAND_TOTAL_VALUE --PER DONNY 
FROM	( 

		SELECT	--WO-RUNTIME= 1:27 
			*, 
			SHIFT_PY_SUPPLY + SHIFT_CY_SUPPLY AS SHIFT_TOT_SUPPLY, 
			PROP_PY_SUPPLY + PROP_CY_SUPPLY AS PROP_TOT_SUPPLY, 
			CULLS_PY_SUPPLY + CULLS_CY_SUPPLY AS CULLS_TOT_SUPPLY, 
			--SHIPPEDBYCYCLE QUANTITIES FOR CURRENTYEAR ONLY: 
			DBO.FN_SHIPPEDBYCYCLE(ITMROWID,CY,'F%') AS FSHIPPED, 
			DBO.FN_SHIPPEDBYCYCLE(ITMROWID,CY,'S%') AS SSHIPPED, 
			DBO.FN_SHIPPEDBYCYCLE(ITMROWID,CY,'U%') AS USHIPPED, 
			--SUPPLY LOT QUANTITIES ON HOLD, SHOW FLAG ON REPORT IF NON-ZERO QUANTITIES EXIST. 
			FALL_PY_HS + FALL_CY_HS AS FALL_TOT_HS, 
			SPRING_PY_HS + SPRING_CY_HS AS SPRING_TOT_HS, 
			SUMMER_PY_HS + SUMMER_CY_HS AS SUMMER_TOT_HS, 
			(FALL_PY_HS + SPRING_PY_HS + SUMMER_PY_HS) AS FSU_PY_HS, 
			(FALL_CY_HS + SPRING_CY_HS + SUMMER_CY_HS) AS FSU_CY_HS, 
			(FALL_PY_HS + SPRING_PY_HS + SUMMER_PY_HS) + 
			(FALL_CY_HS + SPRING_CY_HS + SUMMER_CY_HS) AS FSU_TOT_HS, 
			--SUPPLY VALUES = LISTPRICE * SUPPLY 
			LISTPRICE * SHIFT_PY_SUPPLY AS SHIFT_PY_SUPPLY_VALUE, 
			LISTPRICE * SHIFT_CY_SUPPLY AS SHIFT_CY_SUPPLY_VALUE, 
			LISTPRICE * (SHIFT_PY_SUPPLY + SHIFT_CY_SUPPLY) AS SHIFT_TOT_SUPPLY_VALUE, 
			LISTPRICE * PROP_PY_SUPPLY AS PROP_PY_SUPPLY_VALUE, 
			LISTPRICE * PROP_CY_SUPPLY AS PROP_CY_SUPPLY_VALUE, 
			LISTPRICE * (PROP_PY_SUPPLY + PROP_CY_SUPPLY) AS PROP_TOT_SUPPLY_VALUE, 
			LISTPRICE * CULLS_PY_SUPPLY AS CULLS_PY_SUPPLY_VALUE, 
			LISTPRICE * CULLS_CY_SUPPLY AS CULLS_CY_SUPPLY_VALUE, 
			LISTPRICE * (CULLS_PY_SUPPLY + CULLS_CY_SUPPLY) AS CULLS_TOT_SUPPLY_VALUE 
		FROM	(--SELECT DBO.FN_SALEYEAR(NULL)%100 AS CURR) YR, --ATTACH YR.CURR TO BE USED AS A FIELD INSIDE THIS VIEW 
				SELECT	--WO-RUNTIME= 1:14 
					DBO.FN_SALEYEAR(NULL)%100 AS CY, 
					ITM.ROWID AS ITMROWID, 
					---------------------- 
					CO.COMPANYID, 
					TRIM(CO.NAME) AS COMPANYNAME, 
					ITM.RECORDTYPE, 
					TRIM(WH.IDENTITYID) AS WAREHOUSEID, 
					TRIM(WH.NAME) AS WAREHOUSENAME, 
					TRIM(ITM.SUBCLASSCODE) AS QUALITY, 
					LEFT(PC.PRODUCTCATEGORYCODE,3) AS PLANTGROUPCODE, 
					ITM.REFERENCE_5 AS SORTNAMEVARIETY, 
					(	SELECT CNT.CONTAINERSORT 
						FROM IMCONTAINER CNT (NOLOCK) 
						WHERE CNT.ROWID = ITM.R_CONTAINERCODE 
						) AS CONTAINERSORT, 
					----------- 
					--LINEONE-- 
					----------- 
					TRIM(ITM.ITEMCODE) AS ITEMCODE, 
					ITM.REFERENCE_1 AS COMMONNAME, 
					DBO.FN_LISTPRICE(ITM.ROWID,NULL,NULL) AS LISTPRICE, 
					--SUPPLY QUANTITIES: 
					DBO.FN_SUPPLYROLLUP(ITM.ROWID,'PY','Y%',NULL,NULL) AS SHIFT_PY_SUPPLY, 
					DBO.FN_SUPPLYROLLUP(ITM.ROWID,'CY','Y%',NULL,NULL) AS SHIFT_CY_SUPPLY, 
					DBO.FN_SUPPLYROLLUP(ITM.ROWID,'PY','Z%',NULL,NULL) AS PROP_PY_SUPPLY, 
					DBO.FN_SUPPLYROLLUP(ITM.ROWID,'CY','Z%',NULL,NULL) AS PROP_CY_SUPPLY, 
					DBO.FN_SUPPLYROLLUP(ITM.ROWID,'PY','X%',NULL,NULL) AS CULLS_PY_SUPPLY, 
					DBO.FN_SUPPLYROLLUP(ITM.ROWID,'CY','X%',NULL,NULL) AS CULLS_CY_SUPPLY, 
					--PREVIOUS YEAR SALEABLECROP QUANTITIES (NO SHIPPEDBYCYCLE QUANTITIES NEEDED): 
					DBO.FN_SUPPLYROLLUP(ITM.ROWID,'PY','F%',NULL,NULL) AS FALL_PY_SALEABLE, 
					DBO.FN_SUPPLYROLLUP(ITM.ROWID,'PY','S%',NULL,NULL) AS SPRING_PY_SALEABLE, 
					DBO.FN_SUPPLYROLLUP(ITM.ROWID,'PY','U%',NULL,NULL) AS SUMMER_PY_SALEABLE, 
					DBO.FN_SUPPLYROLLUP(ITM.ROWID,'PY','U3%',NULL,NULL) AS SUMMER3_PY_SALEABLE,	--PER ELLEN 
					--CURRENT YEAR SUPPLY QUANTITIES (SUPPLY + [CURRENTYEAR]SHIPPEDBYCYCLE WILL BE ADDED IN FINAL STEP): 
					DBO.FN_SUPPLYROLLUP(ITM.ROWID,'CY','F%',NULL,NULL) AS FALL_CY_SUPPLY, 
					DBO.FN_SUPPLYROLLUP(ITM.ROWID,'CY','S%',NULL,NULL) AS SPRING_CY_SUPPLY, 
					DBO.FN_SUPPLYROLLUP(ITM.ROWID,'CY','U%',NULL,NULL) AS SUMMER_CY_SUPPLY, 
					DBO.FN_SUPPLYROLLUP(ITM.ROWID,'CY','U3%',NULL,NULL) AS SUMMER3_CY_SUPPLY,	--PER ELLEN 
					----------- 
					--LINETWO-- 
					----------- 
					--SUPPLY LOT QUANTITIES ON HOLD, SHOW FLAG ON REPORT IF NON-ZERO QUANTITIES EXIST. 
					DBO.FN_SUPPLYROLLUP(ITM.ROWID,'PY','F%','H',NULL) AS FALL_PY_HS, 
					DBO.FN_SUPPLYROLLUP(ITM.ROWID,'CY','F%','H',NULL) AS FALL_CY_HS, 
					DBO.FN_SUPPLYROLLUP(ITM.ROWID,'PY','S%','H',NULL) AS SPRING_PY_HS, 
					DBO.FN_SUPPLYROLLUP(ITM.ROWID,'CY','S%','H',NULL) AS SPRING_CY_HS, 
					DBO.FN_SUPPLYROLLUP(ITM.ROWID,'PY','U%','H',NULL) AS SUMMER_PY_HS, 
					DBO.FN_SUPPLYROLLUP(ITM.ROWID,'CY','U%','H',NULL) AS SUMMER_CY_HS, 
					------------- 
					--SUBREPORT-- 
					------------- 
					NULL AS ISSUBREPORT		--DEFAULT TO NULL FOR MAIN DATASET. 
					-------------------------------- 
					--ZERO SUBREPORT FIELDS HERE-- 
					-------------------------------- 
					
					
				FROM 
					IMITEM ITM (NOLOCK) 
					JOIN IDMASTER WH (NOLOCK) ON WH.ROWID = ITM.R_WAREHOUSE 
					JOIN IMPRODUCTCATEGORY PC (NOLOCK) ON PC.ROWID = ITM.R_PRODUCTCATEGORY 
					JOIN ABCOMPANY CO (NOLOCK) ON CO.COMPANYID = ITM.COMPANYID
				WHERE ITM.RECORDTYPE = 'R' 
				AND WH.IDENTITYID IN ('10', '20', '40', '60') 
/* 
				UNION ALL 

				--SUBREPORT SECTION. 
				SELECT 
					DBO.FN_SALEYEAR(NULL)%100 AS CY, 
					ITM.COMPANYID, 
					ITM.RECORDTYPE, 
					ITM.ROWID AS ITMROWID, 
					WH.IDENTITYID AS WAREHOUSEID, 
					WH.NAME AS WAREHOUSENAME, 
					ITM.SUBCLASSCODE AS QUALITY, 
					LEFT(PC.PRODUCTCATEGORYCODE,3) AS PLANTGROUPCODE, 
					----------- 
					--LINEONE-- 
					----------- 
					ITM.ITEMCODE, 
					ITM.REFERENCE_1 AS COMMONNAME, 
					DBO.FN_LISTPRICE(ITM.ROWID,NULL,NULL) AS LISTPRICE, 
					--SUPPLY QUANTITIES: 
					0 AS SHIFT_PY_SUPPLY, 
					0 AS SHIFT_CY_SUPPLY, 
					0 AS PROP_PY_SUPPLY, 
					0 AS PROP_CY_SUPPLY, 
					0 AS CULLS_PY_SUPPLY, 
					0 AS CULLS_CY_SUPPLY, 
					--PREVIOUS YEAR SALEABLECROP QUANTITIES (NO SHIPPEDBYCYCLE QUANTITIES NEEDED): 
					0 AS FALL_PY_SALEABLE, 
					0 AS SPRING_PY_SALEABLE, 
					0 AS SUMMER_PY_SALEABLE, 
					--CURRENT YEAR SUPPLY QUANTITIES (SUPPLY + [CURRENTYEAR]SHIPPEDBYCYCLE WILL BE ADDED IN FINAL STEP): 
					0 AS FALL_CY_SUPPLY, 
					0 AS SPRING_CY_SUPPLY, 
					0 AS SUMMER_CY_SUPPLY, 
					----------- 
					--LINETWO-- 
					----------- 
					--SUPPLY LOT QUANTITIES ON HOLD, SHOW FLAG ON REPORT IF NON-ZERO QUANTITIES EXIST. 
					0 AS FALL_PY_HS, 
					0 AS FALL_CY_HS, 
					0 AS SPRING_PY_HS, 
					0 AS SPRING_CY_HS, 
					0 AS SUMMER_PY_HS, 
					0 AS SUMMER_CY_HS, 
					------------- 
					--SUBREPORT-- 
					------------- 
					'Y' AS ISSUBREPORT		--SET SUBREPORT FLAG 
					-------------------------------- 
					--INSERT SUBREPORT FIELDS HERE-- 
					-------------------------------- 

--==========================================================================================================================-- 
--SUM THE ITEM DETAIL RECORDS TO PRODUCE THIS OUTPUT:																		-- 
--TOTAL BY DETAIL LINES SEASON: [SUBSTRING(LOTCODE,4,2)]																	-- 
--																															-- 
--CAN I ADD SOME GROUPS TO THIS REPORT: ISSUBREPORT/SEASONCODE?																-- 
--																															-- 
--							>FALL_QTY	FALL_AMT   SPRING_QTY SPRING_AMT   SUMMER_QTY SUMMER_AMT	TOTAL_QTY  TOTAL_AMT	-- 
--							--------------------------------------------------------------------------------------------	-- 
--SEASON SUPPLY					1,000	$100,000		3,000	$300,000		5,000	$500,000		9,000	$900,000	-- 
--SEASON DEMAND					1,000	$100,000		3,000	$300,000		5,000	$500,000		9,000	$900,000	-- 
--SEASON INFLATED SUPPLY		1,000	$100,000		3,000	$300,000		5,000	$500,000		9,000	$900,000	-- 
--INFLATED EXCESS SUPPLY		1,000	$100,000		3,000	$300,000		5,000	$500,000		9,000	$900,000	-- 
--SEASON LEFT TO SELL			1,000	$100,000		3,000	$300,000		5,000	$500,000		9,000	$900,000	-- 
--INFLATED SEASON LEFT TO SELL	1,000	$100,000		3,000	$300,000		5,000	$500,000		9,000	$900,000	-- 
--==========================================================================================================================-- 
					
				FROM 
					IMITEM ITM (NOLOCK) 
					JOIN IDMASTER WH (NOLOCK) ON WH.ROWID = ITM.R_WAREHOUSE 
					JOIN IMPRODUCTCATEGORY PC (NOLOCK) ON PC.ROWID = ITM.R_PRODUCTCATEGORY 
				WHERE ITM.RECORDTYPE = 'R' 
*/ 
				) T 
		) X 
--WHERE SHIFT_TOT_SUPPLY + PROP_TOT_SUPPLY + CULLS_TOT_SUPPLY + 
--(FALL_PY_SALEABLE + SPRING_PY_SALEABLE + SUMMER_PY_SALEABLE) + 
--((FALL_CY_SUPPLY + FSHIPPED) + (SPRING_CY_SUPPLY + SSHIPPED) + (SUMMER_CY_SUPPLY + USHIPPED)) 
--+ FSU_TOT_HS <> 0 
