/* 
--UNIT TOTALS BY STEP 
--Created for JD Jones 
SELECT * 
FROM VW_RPT_UNIT_TOTALS_BY_STEP (NOLOCK) 
WHERE COMPANYID = 'SB' 
------- 
AND WAREHOUSEID = '10' 
AND RPTDATE BETWEEN GETDATE()-30 AND GETDATE()
--AND PERIOD BETWEEN 8 AND 10 
AND (RPTPERIOD BETWEEN 1 AND 10 OR RPTPERIOD = 0) 
order by rptyear
AND SALESREPNAME LIKE 'Brown, Ben%' 
and customername like 'Under The Sun%'
and CONSIGNEEID like '737%'
-------
AND SALESREPNAME LIKE 'ALLDREDGE%' 
AND CONSIGNEEID = '820878'--'53877'--'829276' 
*/ 
CREATE OR ALTER VIEW [DBO].[VW_RPT_UNIT_TOTALS_BY_STEP] 
AS 
SELECT 
	*, 
	CURRYEAR AS YEARTEXT0,
	CURRYEAR-1 AS YEARTEXT1, 
	CURRYEAR-2 AS YEARTEXT2, 
	CURRYEAR-3 AS YEARTEXT3, 
	(RESERVE + WAITING + SHIPPABLE + PTRCOMP) AS TOTALOPENORDERS 
FROM ( 
		--SECTION G - Group by--
		SELECT 
			COMPANYID, NATIONALACCOUNT, 
			CURRYEAR, PERIOD, 
			--Added RPTYEAR Groupby field to isolate Volume totals for Orders keyed to Future dates. 
			--Added logic in the report using RPTYEAR to Highlight non-CurrentYear data. 
			--I am currently suppressing these Future dates in SECION U (Unions) 
			--We could probably totally remove RPTYEAR and the Group By field without breaking the report, leaving it in for now.
			--IIF(RPTYEAR > CURRYEAR, RPTYEAR, CURRYEAR) AS RPTYEAR, 
			RPTPERIOD, RPTDATE, 
			WAREHOUSEID, WAREHOUSENAME, 
			SALESREPID, SALESREPNAME, 
			CUSTOMERID, CUSTOMERNAME, 
			CONSIGNEEID, CONSIGNEENAME, 
			SUM(RESERVE)	AS RESERVE, 
			SUM(WAITING)	AS WAITING, 
			SUM(SHIPPABLE)	AS SHIPPABLE, 
			SUM(PTRCOMP)	AS PTRCOMP, --INCLUDES TOTALS FOR ALL REMAINING STEPS.
			SUM(PREVYEAR0)	AS PREVYEAR0, 
			SUM(PREVYEAR1)	AS PREVYEAR1, 
			SUM(PREVYEAR2)	AS PREVYEAR2, 
			SUM(PREVYEAR3)	AS PREVYEAR3 
		FROM ( 
				--SECTION U - Unions--
				SELECT 
					IIF(RECORDTYPE = 'Z' AND RPTYEAR < CURRYEAR, PERIOD, 0) AS RPTPERIOD,	--THIS DEFINES HISTORIC YEAR INVOICES WITH PERIOD-TO-DATE, EVERYTHING ELSE WITH 0 TO GIVE YTD TOTALS. 
					--IIF(RECORDTYPE = 'Z' AND RPTYEAR = CURRYEAR, 0, PERIOD) AS RPTPERIOD,	--THIS DEFINES CURRENT YEAR INVOICES WITH PERIOD 0 TO GIVE YTD TOTALS. 
					CASE
						WHEN RPTYEAR = CURRYEAR-1 THEN DBO.FN_DATE4NEXTYEAR(ISNULL(INVOICEDATE, SHIPPINGDATE))	-->BACKUP 1 YEAR
						WHEN RPTYEAR = CURRYEAR-2 THEN DBO.FN_DATE4NEXT2YEARS(ISNULL(INVOICEDATE, SHIPPINGDATE))	-->BACKUP 2 YEARS
						WHEN RPTYEAR = CURRYEAR-3 THEN DBO.FN_DATE4NEXTYEAR(DBO.FN_DATE4NEXT2YEARS(ISNULL(INVOICEDATE, SHIPPINGDATE)))	-->BACKUP 3 YEARS
						ELSE ISNULL(INVOICEDATE, SHIPPINGDATE)
					END AS RPTDATE, 
					*, 
					IIF(RECORDTYPE = 'R' AND STEP	= 'RESERVE',	ORDERVALUE, 0) AS RESERVE, 
					IIF(RECORDTYPE = 'R' AND STEP	= 'WAITING',	ORDERVALUE, 0) AS WAITING, 
					IIF(RECORDTYPE = 'R' AND STEP	= 'SHIPPABLE',	ORDERVALUE, 0) AS SHIPPABLE, 
					--OVERLOAD PTRCOMP WITH ALL REMAINING STEPS: 
					IIF(RECORDTYPE = 'R' AND STEP IN( 'PTR', 'PTRCOMP', 
													'LOADAPPR', 'BEGPICKCON', 
													'COMPLETE'),	ORDERVALUE, 0) AS PTRCOMP, 
					--IIF(RECORDTYPE = 'R' AND STEP	= 'PTR',		ORDERVALUE, 0) AS PTR, 
					--IIF(RECORDTYPE = 'R' AND STEP	= 'PTRCOMP',	ORDERVALUE, 0) AS PTRCOMP, 
					--IIF(RECORDTYPE = 'R' AND STEP	= 'LOADAPPR',	ORDERVALUE, 0) AS LOADAPPR, 
					--IIF(RECORDTYPE = 'R' AND STEP	= 'BEGPICKCON',	ORDERVALUE, 0) AS BEGPICKCON, 
					--IIF(RECORDTYPE = 'R' AND STEP	= 'COMPLETE',	ORDERVALUE, 0) AS COMPLETE, 
					IIF(RECORDTYPE = 'Z' AND RPTYEAR = CURRYEAR,	ORDERVALUE, 0) AS PREVYEAR0, 
					IIF(RECORDTYPE = 'Z' AND RPTYEAR = CURRYEAR-1,	ORDERVALUE, 0) AS PREVYEAR1, 
					IIF(RECORDTYPE = 'Z' AND RPTYEAR = CURRYEAR-2,	ORDERVALUE, 0) AS PREVYEAR2, 
					IIF(RECORDTYPE = 'Z' AND RPTYEAR = CURRYEAR-3,	ORDERVALUE, 0) AS PREVYEAR3 
					--SOURCE: FN_STEPSORT Function: 
					--RESERVE   	Reservation				03 - Set at end of Evaluation process 
					--WAITING   	Waiting					04 - Waiting is within Pending Stage 
					--SHIPPABLE 	Shippable				05 - Set as Stage advanced to Assigned 
					--PTR       	Pull Tag Review			06 - Set as PTR Set is created 
					--PTRCOMP   	PTR Complete			07 - Set as PTR is Completed 
					--LOADAPPR  	Loading Approval		08 - Approval to begin Loading is given 
					--BEGPICKCON	Begin Pick Confirm		09 - Set before changes at Pick Confirm. 
					--COMPLETE  	Complete				10 - Set after Pick Confirm 
	
				FROM ( 
						SELECT --INSIGHT PERIOD2DATE DATA 
							OH.COMPANYID, 
							OH.RECORDTYPE, 
							OH.STAGE, 
							OH.USERDEFINEDCODE_2 AS STEP, 
							DBO.FN_DATE2YEAR(NULL) AS CURRYEAR, 
							DBO.FN_DATE2YEAR(ISNULL(OH.INVOICEDATE, OH.SHIPPINGDATE)) AS RPTYEAR, 
							DBO.FN_DATE2PERIOD(ISNULL(OH.INVOICEDATE, OH.SHIPPINGDATE)) AS PERIOD, 
							OH.TRANSACTIONNUMBER, 
							OH.SHIPPINGDATE, 
							OH.INVOICEDATE, 
							ISNULL(ICUST.USERDEFINEDCODE_8, 'N') AS NATIONALACCOUNT, 
							WH.IDENTITYID AS WAREHOUSEID, 
							TRIM(WH.NAME) AS WAREHOUSENAME, 
							PART.IDENTITYID AS SALESREPID, 
							TRIM(PART.NAME) AS SALESREPNAME, 
							CUST.IDENTITYID AS CUSTOMERID, 
							TRIM(CUST.NAME) AS CUSTOMERNAME, 
							CONS.IDENTITYID AS CONSIGNEEID, 
							TRIM(CONS.NAME) AS CONSIGNEENAME, 
							DBO.FN_ORDERVALUE(OH.ROWID, 'UNITPRICE') AS ORDERVALUE 
							--DBO.FN_ORDERVALUE(OH.ROWID, 'ITEMPRICE') AS ORDERVALUE --INCLUDES HANDLING & TAGGING CHARGES 
						FROM OMTRANSACTIONHEADER OH (NOLOCK) 
						JOIN IDMASTER WH (NOLOCK) ON WH.ROWID = OH.R_FMSHIPPER 
						JOIN IDMASTER CUST (NOLOCK) ON CUST.ROWID = OH.R_CUSTOMER 
						JOIN IDCUSTOMER ICUST (NOLOCK) ON ICUST.R_IDENTITY = OH.R_CUSTOMER 
						JOIN IDMASTER CONS (NOLOCK) ON CONS.ROWID = OH.R_SHIPPER 
						JOIN IDMASTER PART (NOLOCK) ON PART.ROWID = OH.R_SALESPERSON_1 
						WHERE OH.TRANSACTIONTYPE = 'I' 
						AND OH.STAGE != 'L' 

						UNION ALL 

						SELECT --EPLANT PERIOD2DATE DATA 
							WH.COMPANYID, 
							'Z' AS RECORDTYPE, 
							'C' AS STAGE, 
							'COMPLETE' AS STEP, 
							DBO.FN_DATE2YEAR(NULL) AS CURRYEAR, 
							DBO.FN_DATE2YEAR(INV.DATEINVOICED) AS RPTYEAR, 
							DBO.FN_DATE2PERIOD(INV.DATEINVOICED) AS PERIOD, 
							INV.INVOICENUMBER AS TRANSACTIONNUMBER, 
							INV.REQUESTDATE AS SHIPPINGDATE, 
							INV.DATEINVOICED AS INVOICEDATE, 
							ISNULL(INV.NATIONALACCOUNT, 'N') AS NATIONALACCOUNT, 
							WH.IDENTITYID AS WAREHOUSEID, 
							TRIM(WH.NAME) AS WAREHOUSENAME, 
							PART.IDENTITYID AS SALESREPID, 
							TRIM(PART.NAME) AS SALESREPNAME, 
							ISNULL(CUST.IDENTITYID, CONS.IDENTITYID) AS CUSTOMERID, 
							ISNULL(TRIM(CUST.NAME), TRIM(CONS.NAME)) AS CUSTOMERNAME, 
							--CUST.IDENTITYID AS CUSTOMERID, 
							--CUST.NAME AS CUSTOMERNAME, 
							CONS.IDENTITYID AS CONSIGNEEID, 
							TRIM(CONS.NAME) AS CONSIGNEENAME, 
							 INV.ORDERUNITPRICE AS ORDERVALUE 
							--INV.MERCHANDISETOTAL AS ORDERVALUE --INCLUDES HANDLING & TAGGING CHARGES 
						FROM GNC_INVOICELIST_2021_JUN18 INV (NOLOCK) 
						LEFT JOIN IDMASTER WH (NOLOCK) ON WH.IDENTITYID = TRIM(CAST (INV.DIVISIONNUMBER AS VARCHAR)) 
						LEFT JOIN IDMASTER CONS (NOLOCK) ON CONS.IDENTITYID = TRIM(CAST (INV.CUSTOMERNUMBER AS VARCHAR)) 
						LEFT JOIN IDRELATIONSHIPLINKS LINK (NOLOCK) ON LINK.R_IDMEMBER = CONS.ROWID AND LINK.IDMASTERTYPE = '01' AND LINK.IDMEMBERTYPE = '02'
						LEFT JOIN IDMASTER CUST (NOLOCK) ON CUST.ROWID = LINK.R_IDMASTER
						LEFT JOIN IDMASTER PART (NOLOCK) ON	PART.IDENTITYID = 'S'+RIGHT('00'+TRIM(CAST (INV.SALESREPID AS VARCHAR)),2) 
				) U 
				WHERE RPTYEAR <= CURRYEAR --ELIMINATE ANY FUTURE YEAR ORDERS.
		) G 
		GROUP BY 
			COMPANYID, NATIONALACCOUNT, 
			CURRYEAR, PERIOD, 
			--RPTYEAR, --This Group By Field was added to keep Future dated Orders separated. We currently filter them out.
			RPTPERIOD, RPTDATE, 
			WAREHOUSEID, WAREHOUSENAME, 
			SALESREPID, SALESREPNAME, 
			CUSTOMERID, CUSTOMERNAME, 
			CONSIGNEEID, CONSIGNEENAME 
) X 

--------------------------------------------------------------------------------------------------------------------------------------
--TEST TOTALS BY WAREHOUSE, RECORDTYPE, STEP, RPTYEAR:
/*
--DISPLAY ALL TOTALS BY WAREHOUSE, RECORDTYPE, STEP, RPTYEAR, PERIOD:
SELECT DISTINCT 
	WAREHOUSEID, RECORDTYPE, STEP, RPTYEAR, --RIGHT('0'+TRIM(STR(PERIOD)),2) AS PERIOD, 
	SUM(ORDERVALUE) AS ORDERVALUE 
FROM (	SELECT --DISTINCT--INSIGHT PERIOD2DATE DATA 
			WH.IDENTITYID AS WAREHOUSEID, 
			OH.RECORDTYPE, 
			--FORCE ALL INVOICES TO 'COMPLETE' TO OVERCOME DATA ERRORS & FIX TOTALS. 
			IIF(OH.RECORDTYPE = 'Z', 'COMPLETE', OH.USERDEFINEDCODE_2) AS STEP, 
			--OH.USERDEFINEDCODE_2 AS STEP, 
			DBO.FN_DATE2YEAR(ISNULL(OH.INVOICEDATE, OH.SHIPPINGDATE)) AS RPTYEAR, 
			DBO.FN_DATE2PERIOD(ISNULL(OH.INVOICEDATE, OH.SHIPPINGDATE)) AS PERIOD, 
			DBO.FN_ORDERVALUE(OH.ROWID, 'UNITPRICE') AS ORDERVALUE 
		FROM OMTRANSACTIONHEADER OH (NOLOCK) 
		JOIN IDMASTER WH (NOLOCK) ON WH.ROWID = OH.R_FMSHIPPER 
		JOIN IDMASTER CUST (NOLOCK) ON CUST.ROWID = OH.R_CUSTOMER 
		JOIN IDCUSTOMER ICUST (NOLOCK) ON ICUST.R_IDENTITY = OH.R_CUSTOMER 
		JOIN IDMASTER CONS (NOLOCK) ON CONS.ROWID = OH.R_SHIPPER 
		JOIN IDMASTER PART (NOLOCK) ON PART.ROWID = OH.R_SALESPERSON_1 
		WHERE OH.TRANSACTIONTYPE = 'I' 
		AND OH.STAGE != 'L' 
		UNION ALL 
		SELECT --DISTINCT--EPLANT PERIOD2DATE DATA 
			WH.IDENTITYID AS WAREHOUSEID, 
			'Z' AS RECORDTYPE, 
			'COMPLETE' AS STEP, 
			DBO.FN_DATE2YEAR(INV.DATEINVOICED) AS RPTYEAR, 
			DBO.FN_DATE2PERIOD(INV.DATEINVOICED) AS PERIOD, 
			INV.ORDERUNITPRICE AS ORDERVALUE 
		FROM GNC_INVOICELIST_2021_JUN18 INV (NOLOCK) 
		LEFT JOIN IDMASTER WH (NOLOCK) ON WH.IDENTITYID = TRIM(CAST (INV.DIVISIONNUMBER AS VARCHAR)) 
		LEFT JOIN IDMASTER CUST (NOLOCK) ON CUST.IDENTITYID = TRIM(CAST (INV.CUSTOMERNUMBER AS VARCHAR)) 
		LEFT JOIN IDMASTER CONS (NOLOCK) ON CONS.IDENTITYID = TRIM(CAST (INV.CUSTOMERNUMBER AS VARCHAR)) 
		LEFT JOIN IDMASTER PART (NOLOCK) ON	PART.IDENTITYID = 'S'+RIGHT('00'+TRIM(CAST (INV.SALESREPID AS VARCHAR)),2) 
) U --WHERE WAREHOUSEID = '20' 
GROUP BY WAREHOUSEID, RECORDTYPE, STEP, RPTYEAR--, RIGHT('0'+TRIM(STR(PERIOD)),2) 
ORDER BY WAREHOUSEID, RECORDTYPE, STEP, RPTYEAR--, RIGHT('0'+TRIM(STR(PERIOD)),2) 
*/