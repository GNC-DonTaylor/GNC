--OM_VERSION_MASTER
/*
THIS IS A MASTER VIEW THAT EVENTUALLY DRIVES:
VW_RPT_INVOICE
VW_RPT_CREDITDEBIT
VW_RPT_DELIVERYRECEIPT
VW_RPT_ACKNOWLEDGEMENT
VW_RPT_ORDER_BREAKDOWN
VW_RPT_HOLDS_ON_ORDERS
VW_RPT_INVDETAILBYDATE - (WAS QUERY: CUMALATIVEPURCHASESUMMARY; RAN FOR DAVE HUTSELL BY REQUEST)
*/
CREATE OR ALTER VIEW [DBO].[VW_RPT_OM_VERSION_MASTER]
AS

SELECT
OH.ROWID AS OHROWID,	--REQUIRED FIELD FOR 'VERSIONIZED' REPORTS TO JOIN OMTRANSACTIONHEADER TABLE TO THEIR SELECT STATEMENT.
OH.RECORDTYPE AS RECORDTYPE,
OH.TRANSACTIONTYPE,
IIF(OH.TRANSACTIONTYPE = 'I','Y',NULL) AS ISORDER,
IIF(OH.TRANSACTIONTYPE = 'I',NULL,'Y') AS ISCREDITDEBIT,
OH.REASONCODE,
OD.USERDEFINEDCODE_1 AS CREDITREASON, 
OD.USERDEFINEDREFERENCE_1 AS CREDITDESCRIPTION, 

IIF(OH.RECORDTYPE = 'Z' AND OH.TRANSACTIONTYPE = 'I', 'Y', NULL) AS ISINVOICE,
ISNULL(ICUST.OMSENDEMAIL,'N') AS ISEMAIL,
--ISNULL(OH.SENDEMAIL,'N') AS ISEMAIL,	--I THINK I WAS USING THE WRONG FIELD USE ICUST.OMSENDEMAIL INSTEAD
IIF(OH.STAGE = 'N' AND OH.USERDEFINEDCODE_2 = 'RESERVE', 'Y', NULL) AS ISRESERVE,
IIF(OH.STAGE = 'F','Y',NULL) AS ISFUTURESTAGE,
OH.USERDEFINEDCODE_6 AS NOPRICEDL,	--SUPPRESS ALL PRICES ON DELIVERY RECEIPT WHEN THIS FLAG = 'Y'
OH.INVENTORYREVIEW,
OH.PRINTORDERACKNOWLEDGEMENT,
OH.PRINTPICKINGSLIP,
OH.PRINTINVOICE,
OH.SENDEMAIL,
--INVENTORY REVIEW STATUS IS IMPORTANT UP UNTIL STEP:COMPLETE IS REACHED, THEN IT IS NO LONGER RELEVANT:
IIF(OH.INVENTORYREVIEW = 'Y' AND OH.USERDEFINEDCODE_2 <> 'COMPLETE','Y',NULL) AS UNDERREVIEW,
--WORKING UNDER THE ASSUMPTION THAT ALL 'ISPRINTED' FLAGS ARE SET TO 'P' WHEN THEY HAVE BEEN PRINTED
-- (NOT AT ALL UNDERSTANDING WHAT A VALUE OF 'Y' REPRESENTS SINCE I AM FINDING PENDING ORDERS WITH THIS VALUE)
IIF(OH.PRINTORDERACKNOWLEDGEMENT = 'P','Y',NULL) AS ACKISPRINTED,
IIF(OH.PRINTPICKINGSLIP = 'P','Y',NULL) AS DELISPRINTED,
IIF(OH.PRINTINVOICE = 'P','Y',NULL) AS INVISPRINTED,
OH.STAGE AS STAGE,
SUBSTRING(DBO.FN_STAGESORT(OH.STAGE,'OM'),4,18) AS STAGENAME,
OH.USERDEFINEDCODE_2 AS STEP,
(SELECT OMCODES.DESCRIPTION_1 FROM OMCODES (NOLOCK) WHERE CODETYPE = '03' AND OMCODES.CODE = OH.USERDEFINEDCODE_2) AS STEPDESC,
(SELECT PROFILECODE FROM OMTRANSACTIONDP (NOLOCK) WHERE ROWID = OH.R_PROFILE) AS PROFILECODE, 
OH.STATUS,
OH.REVIEWSTAGE AS OHREVIEWSTAGE,
OD.REVIEWSTAGE AS ODREVIEWSTAGE,
NULLIF(OD.REVIEWBACKORDERFLAG,'N') AS REVIEWBACKORDERFLAG, --THIS FLAG IS NOT NEEDED IF I USE MATH TO DETERMINE BACKORDERS/CANCELS.
--IIF(OD.REVIEWBACKORDERFLAG = 'B', 'Y', NULL) AS ISBACKORDEREDITEM,
--IIF(OD.REVIEWBACKORDERFLAG = 'C', 'Y', NULL) AS ISCANCELLEDITEM,
IIF(OD.QUANTITYBACKORDER <> 0, 'Y', NULL) AS ISBACKORDEREDITEM,
IIF(ISNULL(OD.QUANTITYORDERED,0)-ISNULL(OD.QUANTITYSHIPPED,0)-ISNULL(OD.QUANTITYBACKORDER,0) <> 0, 'Y', NULL) AS ISCANCELLEDITEM,
--THESE ARE THE NEW QUANTITIES THAT ACCURATELY DISPLAY BACKORDERED AND CANCELLED QUANTITIES (NEED TO APPLY THIS TO CHECKERCOPY AND ELSEWHERE)
IIF(OD.REVIEWBACKORDERFLAG = 'B',OD.QUANTITYBACKORDER,NULL) AS BACKORDEREDQTY,
IIF(OD.REVIEWBACKORDERFLAG = 'C',ISNULL(OD.QUANTITYORDERED,0)-ISNULL(OD.QUANTITYSHIPPED,0)-ISNULL(OD.QUANTITYBACKORDER,0),NULL) AS CANCELLEDQTY,

--NEW REPORT VERSION METHODOLOGY:
ISNULL(CAST(ACKVERSION.CODE AS INT), 0) AS ACKVERSIONCODE,
ISNULL(ACKVERSION.DESCRIPTION_1, 'DEFAULT') AS ACKVERSIONDESC,
CASE ACKVERSION.DESCRIPTION_2
	WHEN 'PGP/SORT/SZ/Q'	THEN	PGC.PRODUCTCATEGORYCODE+ITM.REFERENCE_5+CNT.CONTAINERSORT+ITM.SUBCLASSCODE
	WHEN 'SORT/SZ/Q'		THEN	ITM.REFERENCE_5+CNT.CONTAINERSORT+ITM.SUBCLASSCODE
	WHEN 'SKU'				THEN	PSD.ALTERNATESKU
	ELSE							PGC.PRODUCTCATEGORYCODE+ITM.REFERENCE_5+CNT.CONTAINERSORT+ITM.SUBCLASSCODE
	END AS ACKVERSIONSORT,
ISNULL(CAST(DELVERSION.CODE AS INT), 0) AS DELVERSIONCODE,
ISNULL(DELVERSION.DESCRIPTION_1, 'DEFAULT') AS DELVERSIONDESC,
CASE DELVERSION.DESCRIPTION_2
	WHEN 'PGP/SORT/SZ/Q'	THEN	PGC.PRODUCTCATEGORYCODE+ITM.REFERENCE_5+CNT.CONTAINERSORT+ITM.SUBCLASSCODE
	WHEN 'SORT/SZ/Q'		THEN	ITM.REFERENCE_5+CNT.CONTAINERSORT+ITM.SUBCLASSCODE
	WHEN 'SKU'				THEN	PSD.ALTERNATESKU
	ELSE							PGC.PRODUCTCATEGORYCODE+ITM.REFERENCE_5+CNT.CONTAINERSORT+ITM.SUBCLASSCODE
END AS DELVERSIONSORT,
ISNULL(CAST(INVVERSION.CODE AS INT), 0) AS INVVERSIONCODE,
ISNULL(INVVERSION.DESCRIPTION_1, 'DEFAULT') AS INVVERSIONDESC,
CASE INVVERSION.DESCRIPTION_2
	WHEN 'PGP/SORT/SZ/Q'	THEN	PGC.PRODUCTCATEGORYCODE+ITM.REFERENCE_5+CNT.CONTAINERSORT+ITM.SUBCLASSCODE
	WHEN 'SORT/SZ/Q'		THEN	ITM.REFERENCE_5+CNT.CONTAINERSORT+ITM.SUBCLASSCODE
	WHEN 'SKU'				THEN	PSD.ALTERNATESKU
	ELSE							PGC.PRODUCTCATEGORYCODE+ITM.REFERENCE_5+CNT.CONTAINERSORT+ITM.SUBCLASSCODE
END AS INVVERSIONSORT,

--VERSION NUMBERS:
ICUST.USERDEFINEDCODE_12 AS ACKVERSION,
ICUST.USERDEFINEDCODE_13 AS DELVERSION,
ICUST.USERDEFINEDCODE_14 AS INVVERSION,
--3 SORTS USED BY NEW VERSION METHODOLOGY:
PSD.ALTERNATESKU AS GNC_SKUSORT,
ITM.REFERENCE_5+CNT.CONTAINERSORT+ITM.SUBCLASSCODE AS GNC_VARIETYSORT,
PGC.PRODUCTCATEGORYCODE+ITM.REFERENCE_5+CNT.CONTAINERSORT+ITM.SUBCLASSCODE AS GNC_ITEMSORT,

OH.COMPANYID,
CO.NAME AS COMPANYNAME,
WH.IDENTITYID AS WAREHOUSEID,
--Special field for APHIS Sticker on Acknowlegement formats -- must be type INT
CAST(WH.IDENTITYID AS INT) AS WAREHOUSENUM,
WH.NAME AS WAREHOUSENAME,
VWH.SHIPPERADDRESSMEMO,
VWH.SHIPPERADDRESS_1,
VWH.SHIPPERCITY,
VWH.SHIPPERSTATE,
VWH.SHIPPERZIP,
LEFT(VWH.SHIPPERTELEPHONE_1,8)+'-'+RIGHT(VWH.SHIPPERTELEPHONE_1,4) AS SHIPPERPHONE,
LEFT(VWH.SHIPPERFAX_1,8)+'-'+RIGHT(VWH.SHIPPERFAX_1,4) AS SHIPPERFAX,
'DUNN & BRADSTREET #03-299-2778' AS COMPANYDUNNS,
REMITTO.REMITADDRESSMEMO,
--THIS HAS BEEN MOVED TO A FUNCTION: DBO.FN_REMITTOADDRESS(NULL)
--CONVERT(VARCHAR(250), RTRIM(CO.NAME) + CHAR(13)+CHAR(10)+ 'DEPT #96-0460' + CHAR(13)+CHAR(10) + 'OKLAHOMA CITY, OK  73196-0460') AS REMITADDRESSMEMO,
DBO.FN_DATE2YEAR(OH.INVOICEDATE) AS SALEYEAR,
TRIM(OH.TRANSACTIONNUMBER) AS TRANSACTIONNUMBER,
OH.SHIPPINGDATE AS REQUESTDATE,
OH.USERDEFINEDCODE_1 AS REQUESTDATETYPE,
OH.TRANSACTIONDATE,
OH.INVOICEDATE,
OH.TRANSACTIONDUEDATE,
IDTERMS.TERMSCODE,
IDTERMS.DESCRIPTION_1 AS TERMSDESCRIPTION,
--MASTERCUSTOMER
MCUST.CUSTOMERIDENTITYID AS MASTERCUSTOMERIDENTITYID,
MCUST.CUSTOMERNAME AS MASTERCUSTOMERNAME, 
MCUST.CUSTOMERADDRESSMEMO AS MASTERCUSTOMERADDRESSMEMO,
MCUST.CUSTOMERADDRESS_1 AS MASTERCUSTOMERADDRESS_1,
MCUST.CUSTOMERCITY AS MASTERCUSTOMERCITY,
MCUST.CUSTOMERSTATE AS MASTERCUSTOMERSTATE,
MCUST.CUSTOMERZIP AS MASTERCUSTOMERZIP,
--CUSTOMER
VCUST.CUSTOMERIDGROUP AS IDGROUP,
VCUST.CUSTOMERIDENTITYID,
VCUST.CUSTOMERNAME, 
VCUST.CUSTOMERADDRESSMEMO,
VCUST.CUSTOMERADDRESS_1,
VCUST.CUSTOMERCITY,
VCUST.CUSTOMERSTATE,
VCUST.CUSTOMERZIP,
--CONSIGNEE
IIF(OH.R_SYNONYMSALTSHIPTO IS NULL, 'N', 'Y') AS ALTSHIPFLAG, 
VCONS.CONSIGNEEIDENTITYID,

--OVERRIDE CONSIGNEENAME WITH IDADDRESS.ALTERNATENAME PER LANDON - 4/24/24 DT
--VCONS.CONSIGNEENAME, 
ISNULL(NULLIF(TRIM(VCONS.ConsigneeAlternateName),''), VCONS.CONSIGNEENAME) AS CONSIGNEENAME,	--IF A NON-BLANK ALTERNATENAME IS DEFINED FOR A CONSIGNEE, USE IT INSTEAD.

ISNULL(	--BUILD ALTSHIPADDRESSMEMO CANNIBALIZED FROM VW_IDCONSIGNEEVIEW:
		CONVERT(VARCHAR(250), --TRIM(ALTSHIP.NAME) + CHAR(13) + CHAR(10) + 
				(CASE	WHEN ISNULL(ALTSHIP.ADDRESS_1, '')='' AND ISNULL(ALTSHIP.ADDRESS_2, '')=''	THEN '' 
						WHEN ISNULL(ALTSHIP.ADDRESS_2, '')='' AND ISNULL(ALTSHIP.ADDRESS_1, '')<>''	THEN ALTSHIP.ADDRESS_1 + CHAR(13) + CHAR(10) 
						WHEN ISNULL(ALTSHIP.ADDRESS_1, '')='' AND ISNULL(ALTSHIP.ADDRESS_2, '')<>''	THEN ALTSHIP.ADDRESS_2 + CHAR(13) + CHAR(10) 
						ELSE ALTSHIP.ADDRESS_1 + CHAR(13) + CHAR(10) + ALTSHIP.ADDRESS_2 + CHAR(13) + CHAR(10) 
						END 
				) + RTRIM(ALTSHIP.CITY) + '    ' + RTRIM(ALTSHIP.STATE) + '   ' + ALTSHIP.ZIP ),
		CONVERT(VARCHAR(250), --TRIM(VCONS.CONSIGNEENAME) + CHAR(13) + CHAR(10) + 
				(CASE	WHEN ISNULL(VCONS.CONSIGNEEADDRESS_1, '')='' AND ISNULL(VCONS.CONSIGNEEADDRESS_2, '')=''	THEN '' 
						WHEN ISNULL(VCONS.CONSIGNEEADDRESS_2, '')='' AND ISNULL(VCONS.CONSIGNEEADDRESS_1, '')<>''	THEN VCONS.CONSIGNEEADDRESS_1 + CHAR(13) + CHAR(10) 
						WHEN ISNULL(VCONS.CONSIGNEEADDRESS_1, '')='' AND ISNULL(VCONS.CONSIGNEEADDRESS_2, '')<>''	THEN VCONS.CONSIGNEEADDRESS_2 + CHAR(13) + CHAR(10) 
						ELSE VCONS.CONSIGNEEADDRESS_1 + CHAR(13) + CHAR(10) + VCONS.CONSIGNEEADDRESS_2 + CHAR(13) + CHAR(10) 
						END 
				) + RTRIM(VCONS.CONSIGNEECITY) + '    ' + RTRIM(VCONS.CONSIGNEESTATE) + '   ' + VCONS.CONSIGNEEZIP )
	) AS CONSIGNEEADDRESSMEMO, 
ISNULL(ALTSHIP.ADDRESS_1, VCONS.CONSIGNEEADDRESS_1) AS CONSIGNEEADDRESS_1,
ISNULL(ALTSHIP.ADDRESS_2, VCONS.CONSIGNEEADDRESS_2) AS CONSIGNEEADDRESS_2,
ISNULL(ALTSHIP.CITY, VCONS.CONSIGNEECITY) AS CONSIGNEECITY, 
ISNULL(ALTSHIP.STATE, VCONS.CONSIGNEESTATE) AS CONSIGNEESTATE, 
ISNULL(ALTSHIP.ZIP, VCONS.CONSIGNEEZIP) AS CONSIGNEEZIP, 
ISNULL(	TRIM(REPLACE(SUBSTRING(ALTSHIP.COMMENT,1,200),CHAR(13)+CHAR(10), '') ),	--ALTSHIPPHONE 
		NULLIF(LEFT(ACONT.TELEPHONE_1,8)+'-'+RIGHT(ACONT.TELEPHONE_1,4),'-')	--SHIPTOTELEPHONE FOR THE MAIN CONSIGNEE 
	) AS CONSIGNEETELEPHONE_1,
IIF(DATALENGTH(OH.COMMENT)<2,NULL,OH.COMMENT) AS ORDERSHIPPINGINSTR,
OH.USERDEFINEDREFERENCE_3 AS ORDEREDBY,
OH.FMTRIPNUMBER,
OH.FMPUSTOPNUMBER,
TRIM(OH.FMTRIPNUMBER) + ' / ' + TRIM(STR(OH.FMPUSTOPNUMBER)) AS TRIPSTOPTEXT,
--PART.IDENTITYID AS SALESREP, --This has been bugging me so I changed the fieldname - DT
PART.IDENTITYID AS SALESREPID,
PART.NAME AS SALESREPNAME,
ZONCOD.CODE AS ZONECODE,
ZONCOD.DESCRIPTION AS ZONEDESCRIPTION,
VCONS.CONSIGNEEUSERDEFINEDCODE_10 AS TAGCODE,
PSH.PRICESCHEDULECODE,
PSH.DESCRIPTION AS PRICESCHEDULEDESCRIPTION,
OH.PURCHASEORDERNUMBER,
VCUST.CUSTOMERUSERDEFINEDCODE_6 AS GROUPAPPROVALCODEREQUIRED,
VCUST.CUSTOMERUSERDEFINEDCODE_7 AS WORKORDERREQUIRED,
OH.USERDEFINEDREFERENCE_2 AS GROUPAPPROVALCODE,
OH.USERDEFINEDREFERENCE_4 AS WORKORDER,
SUBSTRING(PGC.PRODUCTCATEGORYCODE,1,3) AS PLANTGROUPCODE,
ITM.REFERENCE_5 AS SORTNAMEVARIETY,
ISNULL(OD.QUANTITYORDERED,0) AS QUANTITYORDERED,
ISNULL(OD.QUANTITYSHIPPED,0) AS QUANTITYSHIPPED,
--NULL ZERO VALUES FOR BACKORDERS/CANCELS SO THEY DON'T DISPLAY ON THE REPORTS:
NULLIF(OD.QUANTITYBACKORDER,0) AS QUANTITYBACKORDER,
--CHECK STAGE BEFORE CALCULATING CANCELLED QUANTITY:
NULLIF(IIF(CHARINDEX(OH.STAGE,'A;S;C')>0,ISNULL(OD.QUANTITYORDERED,0)-ISNULL(OD.QUANTITYSHIPPED,0)-ISNULL(OD.QUANTITYBACKORDER,0),0),0) AS QUANTITYCANCELLED,
IIF(CHARINDEX(OH.STAGE,'A;S;C')>0,ISNULL(OD.QUANTITYSHIPPED,0),ISNULL(OD.QUANTITYORDERED,0)) AS QUANTITYATSTAGE,
CNT.PRINTEDCONTAINERCODE,
CNT.CONTAINERSORT,
OD.LINENUMBER,
ITM.ITEMCODE,
--TRIM(ITEMCODE)+'|'+TRIM(STR(UNITPRICE,10,2)) AS ITEMROLLUP,
ITM.SPECIFICATIONCODE,
ISNULL(ITM.UNITVOLUMEQUANTITY,0) AS UNITVOLUMEQUANTITY,
ISNULL(ITM.NETWEIGHTQUANTITY,0) AS NETWEIGHTQUANTITY,
LOT.LOTCODE,
LOT.USERDEFINEDCODE_3 AS HOLDSTOPCODE,
LOT.USERDEFINEDDATE_1 AS HOLDSTOPSTARTDATE,
LOT.USERDEFINEDDATE_2 AS HOLDSTOPENDDATE,
LOT.USERDEFINEDREFERENCE_4 AS HOLDSTOPREASON,
LOT.USERDEFINEDDATE_4 AS HOLDSTOPREASONSTARTDATE,
LOT.USERDEFINEDDATE_5 AS HOLDSTOPREASONENDDATE,
DBO.FN_SALESNOTE(ITM.ROWID,LOT.ROWID,NULL) AS FNSALESNOTE,
LOT.USERDEFINEDREFERENCE_7 AS SALESNOTE,
ITM.REFERENCE_1 AS COMMONNAME,
LEFT(ISNULL(REPLACE(ISNULL(ITM.REFERENCE_5,''),'HDR', 'H DR') +' '+ ISNULL(ITM.USERDEFINEDREFERENCE_1,''),'')+SPACE(40),40) AS PLNAME,
ISNULL(TRIM(ITM.REFERENCE_2),'') + ' ' + ISNULL(ITM.USERDEFINEDREFERENCE_1,' ') AS BOTANICALNAME,
ISNULL(ITM.USERDEFINEDREFERENCE_1,'') AS PATENTNUMBER,
DBO.FN_FORMATUPC(PSH.ROWID, WH.ROWID, ITM.ROWID) AS FORMATTEDUPC,
--ODD behaviour until line below was commented out...I don't understand what the issue is.
--ISNULL(PSD.COMMENT,ITM.ITEMSUPCCODE) AS UPCCODE,
IIF(PSH.SKUREQUIRED='Y', '*', NULL) AS SKUREQMARK,
IIF(PSH.RETAILREQUIRED='Y', '*', NULL) AS RETAILREQMARK,
PSD.ALTERNATESKU AS CUSTOMERSKU,
NULLIF(ISNULL(PSD.RETAILPRICE,0), 0) AS RETAILPRICE,
--These are text datatypes, not compatible with varchar functions:
IIF(DATALENGTH(OD.COMMENT)<2,NULL,OD.COMMENT) AS PICKNOTE,
IIF(DATALENGTH(OD.USERDEFINEDCOMMENT)<2,NULL,OD.USERDEFINEDCOMMENT) AS TAGDEPTNOTE,

--Workaround for broken Order Import process:
NULLIF(OD.USERDEFINEDREFERENCE_2,'0') AS CUSTLINETEXT,
--OD.USERDEFINEDREFERENCE_2 AS CUSTLINETEXT,

OH.DEFAULTDETAILDISCOUNT, 
ICUST.CUSTOMERPURCHASEDISCOUNT,
--PRICES
DBO.FN_LISTPRICE(ITM.ROWID,OH.SHIPPINGDATE,IIF(CHARINDEX(OH.STAGE,'A;S;C')>0,ISNULL(OD.QUANTITYSHIPPED,0),ISNULL(OD.QUANTITYORDERED,0))) AS LISTPRICE,
ISNULL(OD.UNITPRICE,0) AS UNITPRICE,
ISNULL(OD.HANDLINGCHARGEPERITEM,0) AS HANDLINGCHARGEPERITEM,
ISNULL(OD.TAGGINGCHARGEPERITEM,0) AS TAGGINGCHARGEPERITEM,

--------------------------------------------------------------------------------------------------------------------------------
--CHANGES TO FREIGHTRATEPERITEM IN 3 PLACES SO USERS DON'T HAVE TO ZERO EVERY ITEM OUT WHEN REMOVING FREIGHT AT THE ORDER LEVEL:
IIF(ISNULL(DBO.FN_ORDERFREIGHT(OH.ROWID, 'FRTZONE'),0) = 0, 0, ISNULL(OD.FREIGHTRATEPERITEM, 0)) AS FREIGHTRATEPERITEM,	-->THIS CODE REPLACES ISNULL(OD.FREIGHTRATEPERITEM, 0) 
ISNULL(OD.UNITPRICE + ISNULL(OD.HANDLINGCHARGEPERITEM, 0) + ISNULL(OD.TAGGINGCHARGEPERITEM, 0) + 
		IIF(ISNULL(DBO.FN_ORDERFREIGHT(OH.ROWID, 'FRTZONE'),0) = 0, 0, ISNULL(OD.FREIGHTRATEPERITEM, 0))				-->THIS CODE REPLACES ISNULL(OD.FREIGHTRATEPERITEM, 0) 
		,0) AS LANDEDPRICE,
--EXTENDED PRICES
DBO.FN_LISTPRICE(ITM.ROWID,OH.SHIPPINGDATE,IIF(CHARINDEX(OH.STAGE,'A;S;C')>0,ISNULL(OD.QUANTITYSHIPPED,0),ISNULL(OD.QUANTITYORDERED,0))) * IIF(CHARINDEX(OH.STAGE,'A;S;C')>0,ISNULL(OD.QUANTITYSHIPPED,0),ISNULL(OD.QUANTITYORDERED,0)) AS EXTLISTPRICE,
OD.UNITPRICE * IIF(CHARINDEX(OH.STAGE,'A;S;C')>0,ISNULL(OD.QUANTITYSHIPPED,0),ISNULL(OD.QUANTITYORDERED,0)) AS EXTUNITPRICE,
(ISNULL(OD.UNITPRICE + ISNULL(OD.HANDLINGCHARGEPERITEM, 0) + ISNULL(OD.TAGGINGCHARGEPERITEM, 0) + 
		IIF(ISNULL(DBO.FN_ORDERFREIGHT(OH.ROWID, 'FRTZONE'),0) = 0, 0, ISNULL(OD.FREIGHTRATEPERITEM, 0))				-->THIS CODE REPLACES ISNULL(OD.FREIGHTRATEPERITEM, 0) 
		,0)) * IIF(CHARINDEX(OH.STAGE,'A;S;C')>0,ISNULL(OD.QUANTITYSHIPPED,0),ISNULL(OD.QUANTITYORDERED,0)
		) AS EXTLANDEDPRICE,
--------------------------------------------------------------------------------------------------------------------------------

--FREIGHT BREAKDOWN
DBO.FN_ORDERFREIGHT(OH.ROWID, 'FRTFLAT%') AS FRTFLAT,
(SELECT DESCRIPTION FROM IDFREIGHTCHARGES (NOLOCK) WHERE CHARGECODE LIKE 'FRTFLAT%') AS FRTFLAT_TEXT,
DBO.FN_ORDERFREIGHT(OH.ROWID, 'FRTADJ%') AS FRTADJ,
(SELECT DESCRIPTION FROM IDFREIGHTCHARGES (NOLOCK) WHERE CHARGECODE LIKE 'FRTADJ%') AS FRTADJ_TEXT,
DBO.FN_ORDERFREIGHT(OH.ROWID, 'FRTHDL%') AS FRTHDL,
(SELECT DESCRIPTION FROM IDFREIGHTCHARGES (NOLOCK) WHERE CHARGECODE LIKE 'FRTHDL%') AS FRTHDL_TEXT,
DBO.FN_ORDERFREIGHT(OH.ROWID, 'FRTFSC%') AS FRTFSC,
(SELECT DESCRIPTION FROM IDFREIGHTCHARGES (NOLOCK) WHERE CHARGECODE LIKE 'FRTFSC%') AS FRTFSC_TEXT,
DBO.FN_ORDERFREIGHT(OH.ROWID, 'FRTPHYTO%') AS FRTPHYTO,
(SELECT DESCRIPTION FROM IDFREIGHTCHARGES (NOLOCK) WHERE CHARGECODE LIKE 'FRTPHYTO%') AS FRTPHYTO_TEXT,
DBO.FN_ORDERFREIGHT(OH.ROWID, 'FRTZONE') AS FRTZONE,
(SELECT DESCRIPTION FROM IDFREIGHTCHARGES (NOLOCK) WHERE CHARGECODE LIKE 'FRTZONE') AS FRTZONE_TEXT,
DBO.FN_ORDERFREIGHT(OH.ROWID, NULL) AS FRTTOTAL,
NULLIF(DBO.FN_ORDERFREIGHT(OH.ROWID, 'FRTZONE') - 
IIF(CHARINDEX(OH.STAGE,'A;S;C')>0,
	(SELECT NULLIF(SUM(ISNULL(OD2.FREIGHTRATEPERITEM,0) * ISNULL(OD2.QUANTITYSHIPPED,0)),0) 
	FROM OMTRANSACTIONDETAIL OD2 (NOLOCK) WHERE OD2.R_TRANSACTIONHEADER = OH.ROWID),
	(SELECT NULLIF(SUM(ISNULL(OD2.FREIGHTRATEPERITEM,0) * ISNULL(OD2.QUANTITYORDERED,0)),0) 
	FROM OMTRANSACTIONDETAIL OD2 (NOLOCK) WHERE OD2.R_TRANSACTIONHEADER = OH.ROWID)),0) AS MINIMUMFREIGHT_ADJ,
--TOTAL PRICES
DBO.FN_ORDERVALUE(OH.ROWID,'LISTPRICE') AS ORDERLISTPRICE,	--I HAD TO ADD THIS ORDERTOTAL BECAUSE SUBREPORT IN DELIVERYRECEIPT WAS DOUBLING THE SUMMATION FIELD.
DBO.FN_ORDERVALUE(OH.ROWID,'UNITPRICE') AS ORDERUNITPRICE,	--I HAD TO ADD THIS ORDERTOTAL BECAUSE SUBREPORT IN DELIVERYRECEIPT WAS DOUBLING THE SUMMATION FIELD.
DBO.FN_ORDERVALUE(OH.ROWID,'HANDLING') AS ORDERHANDLINGCHARGE,
DBO.FN_ORDERVALUE(OH.ROWID,'TAGGING') AS ORDERTAGGINGCHARGE,
DBO.FN_ORDERVALUE(OH.ROWID,'SALESTAX') AS ORDERSALESTAX,
DBO.FN_ORDERVALUE(OH.ROWID,NULL) AS ORDERTOTAL,
--DBO.FNOM_CALCULATETRANSTOTALS(OH.ROWID,'OUTTOTALAMOUNT') AS ORDERTOTAL, --REALLY THIS S/B CURRENTARTOTAL,

/*
--WE NEED LOWESMEASUREMENTS DATA CREATED SOMEWHERE
--FIND LEFTMOST CHARACTERS THRU 1ST SPACE:
LEFT('2.25-GAL ABELIA ASSORTED', CHARINDEX(' ','2.25-GAL ABELIA ASSORTED')) AS LOWESSIZE,
--FIND LEFTMOST CHARACTERS THRU 2ND SPACE: (Probably not going to be used)
LEFT('2.25-GAL ABELIA ASSORTED', CHARINDEX(' ','2.25-GAL ABELIA ASSORTED',CHARINDEX(' ','2.25-GAL ABELIA ASSORTED')+1)) AS LOWESDESCRIPTION,
--OHROWID IS NEW REQUIRED FIELD FOR 'VERSIONIZED' REPORTS IN ORDER TO JOIN OMTRANSACTIONHEADER TABLE TO THE SELECT STATEMENT.(ABOVE)
*/
LEFT(LOWES.LOWESDESC,CHARINDEX(' ',LOWES.LOWESDESC)) AS LOWESSIZE, 
ISNULL(ICUST.USERDEFINEDCODE_9,'N') AS ISEDICUSTOMER, 
ISNULL(ICUST.USERDEFINEDCODE_8, 'N') AS NATLACCT	--ADD PER ERICA 4/7/22 - DT

FROM (SELECT DBO.FN_REMITTOADDRESS(NULL) AS REMITADDRESSMEMO) REMITTO,
OMTRANSACTIONHEADER OH (NOLOCK)
LEFT JOIN OMTRANSACTIONDETAIL OD (NOLOCK) ON OD.R_TRANSACTIONHEADER = OH.ROWID
LEFT JOIN IMITEM ITM (NOLOCK) ON ITM.ROWID = OD.R_ITEM
LEFT JOIN IMPRODUCTCATEGORY PGC (NOLOCK) ON PGC.ROWID = ITM.R_PRODUCTCATEGORY
LEFT JOIN IMCONTAINER CNT (NOLOCK) ON CNT.ROWID = ITM.R_CONTAINERCODE
LEFT JOIN IMLOT LOT (NOLOCK) ON LOT.ROWID = OD.R_LOT
LEFT JOIN VW_IDSHIPPERVIEW VWH (NOLOCK) ON VWH.SHIPPERMASTERROWID = OH.R_FMSHIPPER
LEFT JOIN VW_IDCUSTOMERVIEW VCUST (NOLOCK) ON VCUST.CUSTOMERMASTERROWID = OH.R_CUSTOMER
LEFT JOIN VW_IDCONSIGNEEVIEW VCONS (NOLOCK) ON VCONS.CONSIGNEEMASTERROWID = OH.R_SHIPPER 
LEFT JOIN IDSYNONYMS ALTSHIP (NOLOCK) ON ALTSHIP.ROWID = OH.R_SYNONYMSALTSHIPTO	-->NEW ALTSHIPTOADDRESS PROJECT 3/31/23 DT 
LEFT JOIN IDADDRESS ACONT (NOLOCK) ON ACONT.R_IDENTITY = DBO.FN_GETCONTACT(VCONS.ConsigneeMasterRowID,'02','C5')
LEFT JOIN IDCUSTOMER ICUST (NOLOCK) ON ICUST.R_IDENTITY = OH.R_CUSTOMER
--NEW JOIN: MASTERCUSTOMER:
LEFT JOIN VW_IDCUSTOMERVIEW MCUST (NOLOCK) ON MCUST.CUSTOMERMASTERROWID = DBO.FN_MASTERCUSTOMER(VCUST.CUSTOMERMASTERROWID,NULL)
--LEFT JOIN IDCUSTOMER IMCUST (NOLOCK) ON IMCUST.R_IDENTITY = MCUST.CUSTOMERMASTERROWID
--DOES ADDING MASTERCUSTOMER TO THE MIX ALSO REQUIRE REFACTORING TERMS DEFINITION? (BELOW)
LEFT JOIN IDTERMS (NOLOCK) ON IDTERMS.ROWID = ISNULL(OH.R_TERMS, ICUST.R_TERMS)
LEFT JOIN IDMASTER WH (NOLOCK) ON WH.ROWID = OH.R_FMSHIPPER
LEFT JOIN IDCONSIGNEESHIPPERZONE SZ (NOLOCK) ON SZ.R_CONSIGNEE = VCONS.CONSIGNEEMASTERROWID AND SZ.R_SHIPPER = WH.ROWID
LEFT JOIN IMPRICESCHEDULEHEADER PSH (NOLOCK) ON PSH.ROWID = ISNULL(SZ.R_PRICESCHEDULE, VCONS.CONSIGNEER_PRICESCHEDULE)
LEFT JOIN IMPRICESCHEDULEDETAIL PSD (NOLOCK) ON PSD.R_PRICESCHEDULEHEADER = PSH.ROWID AND PSD.R_ITEM = OD.R_ITEM AND PSD.EXPIRATIONDATE >= GETDATE()
LEFT JOIN RTZONETABLECODES ZONCOD (NOLOCK) ON ZONCOD.ROWID = ISNULL(ISNULL(OH.R_ZONEFREIGHTRATEOVERRIDE, PSH.R_ZONE), SZ.R_ZONE)
LEFT JOIN ABCOMPANY CO (NOLOCK) ON CO.COMPANYID = OH.COMPANYID
--LEFT JOIN IDADDRESS COADD (NOLOCK) ON COADD.ROWID = CO.R_DEFAULTADDRESS
LEFT JOIN IDMASTER PART (NOLOCK) ON PART.ROWID = ISNULL(OH.R_SALESPERSON_1, VCONS.CONSIGNEER_PARTICIPANT)
LEFT JOIN GNC_LOWES_MEASUREMENT LOWES (NOLOCK) ON LOWES.SKU = PSD.ALTERNATESKU
LEFT JOIN IDCODES ACKVERSION (NOLOCK) ON ACKVERSION.CODE = ICUST.USERDEFINEDCODE_12 AND ACKVERSION.CODETYPE = '3C'
LEFT JOIN IDCODES DELVERSION (NOLOCK) ON DELVERSION.CODE = ICUST.USERDEFINEDCODE_13 AND DELVERSION.CODETYPE = '3D'
LEFT JOIN IDCODES INVVERSION (NOLOCK) ON INVVERSION.CODE = ICUST.USERDEFINEDCODE_14 AND INVVERSION.CODETYPE = '3E'
WHERE OH.RECORDTYPE IN ('R','Z') --ELIMINATE P, I AND E RECORDS (PROFILE AND EDI PO RELATED RECORDS)
AND OH.STAGE <> 'L'	--ELIMINATE "CANCELLED" ORDERS.
--AND OH.TRANSACTIONNUMBER = '10-11671'



