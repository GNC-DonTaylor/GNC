/*
--41 CUSTOMER RETAIL AND SKU
SELECT * 
FROM VW_RPT_CUSTOMER_RETAIL_SKU (NOLOCK) 
WHERE PRICESCHEDULECODE IS NOT NULL 

--23 MISSING RETAIL & SKU
SELECT * 
FROM VW_RPT_CUSTOMER_RETAIL_SKU (NOLOCK) 
WHERE PRICESCHEDULECODE IS NOT NULL 
AND (
	(RETAILREQMARK = '*' AND ISNULL(RETAILPRICE,0) = 0)
	OR
	(SKUREQMARK = '*' AND ISNULL(ALTERNATESKU,'') = '')
) 
and transactionnumber = '40-15390'--'10-13295'

--23+ VALIDATE PRICE SCHEDULE ORDERS
SELECT * 
FROM VW_RPT_CUSTOMER_RETAIL_SKU (NOLOCK) 
WHERE PRICESCHEDULECODE IS NOT NULL 
AND (
	(RETAILREQMARK = '*' AND ISNULL(RETAILPRICE,0) = 0)
	OR
	(SKUREQMARK = '*' AND ISNULL(ALTERNATESKU,'') = '')
	OR
	(DISALLOWUNSPECIFIEDMARK = '*' AND ISUNSPECIFIEDITEM = 'Y')
	OR
	(SKUROLLUPREQMARK = '*' AND (ISROLLUPVIOLATION = 'Y' OR ISORDERROLLUPVIOLATION = 'Y' OR ISUPCROLLUPVIOLATION = 'Y') )
) 
and transactionnumber = '40-30656'
*/
CREATE OR ALTER VIEW [DBO].[VW_RPT_CUSTOMER_RETAIL_SKU]
AS
SELECT
CO.COMPANYID,
CO.NAME AS COMPANYNAME,
OH.RECORDTYPE,
WH.IDENTITYID AS WAREHOUSEID,
WH.NAME AS WAREHOUSENAME,
PSH.PRICESCHEDULECODE,
PSH.DESCRIPTION AS PRICESCHEDULEDESC,
PART.IDENTITYID AS SALESREPID,
PART.NAME AS SALESREPNAME,
CUST.IDENTITYID AS CUSTOMERID,
CUST.NAME AS CUSTOMERNAME,
CUST.IDGROUP,
--added Stage and Step fields:
OH.STAGE AS STAGE,
SUBSTRING(DBO.FN_STAGESORT(OH.STAGE,'OM'),4,18) AS STAGENAME,
OH.USERDEFINEDCODE_2 AS STEP,
----------------------
OH.TRANSACTIONNUMBER,
OH.SHIPPINGDATE AS REQUESTDATE, 
OD.LASTUPDATEDATETIME AS DETAILUPDATED, 
DATEDIFF(DAY, OD.LASTUPDATEDATETIME, GETDATE()) AS DAYSSINCEUPDATE, 
DATEDIFF(DAY, GETDATE(), OH.SHIPPINGDATE) AS DAYSBEFORESHIPPING, 
OD.QUANTITYORDERED, 
ITM.REFERENCE_1 AS COMMONNAME,
PGC.PRODUCTCATEGORYCODE+ITM.REFERENCE_5+CNT.CONTAINERSORT+ITM.SUBCLASSCODE AS GNC_ITEMSORT,
ITM.ITEMCODE,
CNT.PRINTEDCONTAINERCODE,
DBO.FN_LISTPRICE(ITM.ROWID, OH.SHIPPINGDATE,OD.QUANTITYORDERED) AS LISTPRICE,
OD.UNITPRICE,
ISNULL(OD.HANDLINGCHARGEPERITEM,0) AS HANDLINGCHARGEPERITEM,
ISNULL(OD.TAGGINGCHARGEPERITEM,0) AS TAGGINGCHARGEPERITEM,
OD.UNITPRICE + ISNULL(OD.HANDLINGCHARGEPERITEM,0) + ISNULL(OD.TAGGINGCHARGEPERITEM,0) AS COMBINEDPRICE,
------------------------------------------------------------------------------------
--Zero FRTZONE amount denotes that FREIGHTRATEPERITEM should be treated as Zero too.
IIF(ISNULL(DBO.FN_ORDERFREIGHT(OH.ROWID, 'FRTZONE'),0) = 0, 0, ISNULL(OD.FREIGHTRATEPERITEM, 0)) AS FREIGHT,
ISNULL(OD.UNITPRICE + ISNULL(OD.HANDLINGCHARGEPERITEM, 0) + ISNULL(OD.TAGGINGCHARGEPERITEM, 0) + 
		IIF(ISNULL(DBO.FN_ORDERFREIGHT(OH.ROWID, 'FRTZONE'),0) = 0, 0, ISNULL(OD.FREIGHTRATEPERITEM, 0))
		,0) AS LANDED,
------------------------------------------------------------------------------------
IIF(PSH.RETAILREQUIRED='Y', '*', NULL) AS RETAILREQMARK,
(SELECT TOP 1 PSD.RETAILPRICE FROM IMPRICESCHEDULEDETAIL PSD (NOLOCK) 
	WHERE PSD.R_ITEM = OD.R_ITEM AND PSD.R_PRICESCHEDULEHEADER = PSH.ROWID
	AND PSD.EXPIRATIONDATE > OH.SHIPPINGDATE ORDER BY PSD.EXPIRATIONDATE) AS RETAILPRICE,
IIF(PSH.SKUREQUIRED='Y', '*', NULL) AS SKUREQMARK,
(SELECT TOP 1 PSD.ALTERNATESKU FROM IMPRICESCHEDULEDETAIL PSD (NOLOCK) 
	WHERE PSD.R_ITEM = OD.R_ITEM AND PSD.R_PRICESCHEDULEHEADER = PSH.ROWID
	AND PSD.EXPIRATIONDATE > OH.SHIPPINGDATE ORDER BY PSD.EXPIRATIONDATE DESC) AS ALTERNATESKU,
IIF(PSH.ALLOWUNSPECIFIED='Y', NULL, '*') AS DISALLOWUNSPECIFIEDMARK,	--This is reversing the logic of the flag, that's what they wanted.
IIF(PSD.ROWID IS NULL, 'Y', NULL) AS ISUNSPECIFIEDITEM,
--THIS INLINE LOGIC REFUSED TO WORK LIKE I WANTED IT TO: I.E. TURN NULLS INTO 'Y' AND EVERYTHINGELSE INTO NULLS
--SO I ADDED A LEFT JOIN TO THE VIEW AND USED THE LOGIC ABOVE WHICH DOES WORK. - DT
--(SELECT TOP 1 IIF(PSD.ROWID IS NULL, 'Y', NULL) FROM IMPRICESCHEDULEDETAIL PSD (NOLOCK) 
--	WHERE PSD.R_ITEM = OD.R_ITEM AND PSD.R_PRICESCHEDULEHEADER = PSH.ROWID
--	AND PSD.EXPIRATIONDATE > OH.SHIPPINGDATE ORDER BY PSD.EXPIRATIONDATE DESC) AS ISUNSPECIFIEDITEM,
IIF(ICUST.USERDEFINEDCODE_3='Y', '*', NULL) AS SKUROLLUPREQMARK,
(	SELECT IIF(--COUNT DISTINCT PRICE BUCKETS ACROSS SELECTED SKU
			(	COUNT(DISTINCT CPSD.DISCOUNTPRICE) + 
				COUNT(DISTINCT CPSD.FREIGHTCHARGE) + 
				COUNT(DISTINCT CPSD.OTHERCHARGE) + 
				COUNT(DISTINCT CPSD.HANDLINGCHARGE)
			--THERE SHOULD BE ONLY 4
			)/4. > 1., 'Y', NULL)
	FROM IMPRICESCHEDULEDETAIL CPSD (NOLOCK)
	WHERE CPSD.R_PRICESCHEDULEHEADER = PSH.ROWID AND CPSD.ALTERNATESKU = 
		(--DETERMINE THE CURRENT SKU TO SEARCH AGAINST:
		SELECT TOP 1 PSD.ALTERNATESKU FROM IMPRICESCHEDULEDETAIL PSD (NOLOCK) 
		WHERE PSD.R_ITEM = OD.R_ITEM AND PSD.R_PRICESCHEDULEHEADER = PSH.ROWID
		AND PSD.EXPIRATIONDATE > OH.SHIPPINGDATE ORDER BY PSD.EXPIRATIONDATE DESC
		)
	AND CPSD.EXPIRATIONDATE > OH.SHIPPINGDATE
	AND ICUST.USERDEFINEDCODE_3='Y' --ONLY IF SKUROLLUP IS REQUIRED BY THE CUSTOMER
) AS ISROLLUPVIOLATION,
(	SELECT IIF((COUNT(DISTINCT COD.UNITPRICE) + 
					COUNT(DISTINCT COD.FREIGHTRATEPERITEM) + 
					COUNT(DISTINCT COD.TAGGINGCHARGEPERITEM) + 
					COUNT(DISTINCT COD.HANDLINGCHARGEPERITEM))/4. > 1., 'Y', NULL) 
		--FIND INCONSISTENT SKU PRICING IN ORDER DETAIL:
		FROM OMTRANSACTIONDETAIL COD (NOLOCK)
		JOIN IMPRICESCHEDULEDETAIL CPSD (NOLOCK) ON CPSD.R_PRICESCHEDULEHEADER = PSH.ROWID AND CPSD.ALTERNATESKU = PSD.ALTERNATESKU AND CPSD.EXPIRATIONDATE > OH.SHIPPINGDATE AND CPSD.R_ITEM = COD.R_ITEM
		WHERE COD.R_TRANSACTIONHEADER = OH.ROWID 
		AND ICUST.USERDEFINEDCODE_3 = 'Y' --ONLY IF SKUROLLUP IS REQUIRED BY THE CUSTOMER 
) AS ISORDERROLLUPVIOLATION,

ITM.ITEMSUPCCODE,
--When FORMATTEDITEMUPC <> FORMATTEDUPC Then UPC is Overridden.
DBO.FN_FORMATUPC(NULL, WH.ROWID, ITM.ROWID) AS FORMATTEDITEMUPC,
DBO.FN_FORMATUPC(PSH.ROWID, WH.ROWID, ITM.ROWID) AS FORMATTEDUPC,
IIF(PSH.USENPC='Y', '*', NULL) AS UPCASSKUREQMARK,
--------------------------------------------
(	SELECT IIF(--COUNT DISTINCT UPC CODES ACROSS SELECTED SKU
			(	COUNT(DISTINCT NULLIF(TRIM(REPLACE(SUBSTRING(CPSD.COMMENT,1,14),CHAR(13)+CHAR(10), '')), ''))
			--THERE SHOULD BE ONLY 1
			) > 1., 'Y', NULL)
	FROM IMPRICESCHEDULEDETAIL CPSD (NOLOCK)
	WHERE CPSD.R_PRICESCHEDULEHEADER = PSH.ROWID AND CPSD.ALTERNATESKU = 
		(--DETERMINE THE CURRENT SKU TO SEARCH AGAINST:
		SELECT TOP 1 PSD.ALTERNATESKU FROM IMPRICESCHEDULEDETAIL PSD (NOLOCK) 
		WHERE PSD.R_ITEM = OD.R_ITEM AND PSD.R_PRICESCHEDULEHEADER = PSH.ROWID
		AND PSD.EXPIRATIONDATE > OH.SHIPPINGDATE ORDER BY PSD.EXPIRATIONDATE DESC
		)
	AND CPSD.EXPIRATIONDATE > OH.SHIPPINGDATE
	AND ICUST.USERDEFINEDCODE_3='Y' --ONLY IF SKUROLLUP IS REQUIRED BY THE CUSTOMER<<<<DOES THIS APPLY HERE???
) AS ISUPCROLLUPVIOLATION

FROM OMTRANSACTIONHEADER OH (NOLOCK)
JOIN OMTRANSACTIONDETAIL OD (NOLOCK) ON OD.R_TRANSACTIONHEADER = OH.ROWID
LEFT OUTER JOIN ABCOMPANY CO (NOLOCK) ON CO.COMPANYID = OH.COMPANYID
JOIN IDMASTER WH (NOLOCK) ON WH.ROWID = OD.R_WAREHOUSE
JOIN IDMASTER CUST (NOLOCK) ON CUST.ROWID = OH.R_CUSTOMER
JOIN IDCUSTOMER ICUST (NOLOCK) ON ICUST.R_IDENTITY = CUST.ROWID
JOIN IMITEM ITM (NOLOCK) ON ITM.ROWID = OD.R_ITEM
JOIN IMPRODUCTCATEGORY PGC (NOLOCK)ON PGC.ROWID = ITM.R_PRODUCTCATEGORY
JOIN IMCONTAINER CNT (NOLOCK) ON CNT.ROWID = ITM.R_CONTAINERCODE
LEFT OUTER JOIN IDMASTER PART (NOLOCK) ON PART.ROWID = OH.R_SALESPERSON_1
LEFT JOIN IDCONSIGNEE ICONS (NOLOCK) ON ICONS.R_IDENTITY = OH.R_SHIPPER
LEFT JOIN IDCONSIGNEESHIPPERZONE ZON (NOLOCK) ON ZON.R_CONSIGNEE = ICONS.R_IDENTITY AND ZON.R_SHIPPER = WH.ROWID
LEFT JOIN IMPRICESCHEDULEHEADER PSH (NOLOCK) ON PSH.ROWID = ZON.R_PRICESCHEDULE
LEFT JOIN IMPRICESCHEDULEDETAIL PSD ON PSD.R_PRICESCHEDULEHEADER = PSH.ROWID AND PSD.R_ITEM = OD.R_ITEM AND PSD.EXPIRATIONDATE >= GETDATE() 

WHERE OH.RECORDTYPE = 'R'	--ELIMINATE "COMMITTED" ORDERS.
AND OH.STAGE <> 'L'	--ELIMINATE "CANCELLED" ORDERS.
