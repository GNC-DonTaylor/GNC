/* RUNTIME 0:24 
--ADDED NET CALCULATIONS IN VIEW SO I DON'T NEED TO ADD THEM IN THE REPORT.	05/20/2021 DT  

--SALES2GOAL MAJOR 
--SALES2GOAL MAJOR SUMMARY 
SELECT * 
FROM VW_RPT_SALES2GOAL_MAJOR (NOLOCK) 
WHERE MAJORACCOUNT IS NOT NULL 
AND WAREHOUSEID = '10' 
AND SALEYEAR = '2023' 
ORDER BY 
COMPANYID, 
WAREHOUSEID, 
MAJORACCOUNT, 
MAJORGROUPNAME 
*/ 
CREATE OR ALTER VIEW [DBO].[VW_RPT_SALES2GOAL_MAJOR] 
AS 
SELECT R.*, 
	--(ACTUALGROSS + RESERVEGROSS + ORDERGROSS) - GOALGROSS AS RESULTGROSS, 
	--(ACTUALDISCOUNT + RESERVEDISCOUNT + ORDERDISCOUNT) - GOALDISCOUNT AS RESULTDISCOUNT, 
	--(ACTUALFREIGHT + RESERVEFREIGHT + ORDERFREIGHT) - GOALFREIGHT AS RESULTFREIGHT, 
	(ACTUALNET + RESERVENET + ORDERNET) - GOALNET AS RESULTNET 
FROM	( 
		SELECT	
			U.COMPANYID, U.COMPANYNAME, U.RECORDTYPE, 
			U.SALEYEAR, U.PERIOD, U.TRANSACTIONDATE, 
			IIF(U.SALEYEAR = DBO.FN_DATE2YEAR(NULL),'Y', NULL) AS ISCURRYEAR, 
			(	SELECT STATE FROM IDMASTER (NOLOCK) 
				JOIN IDADDRESS (NOLOCK) ON IDADDRESS.ROWID = R_DEFAULTADDRESS 
				WHERE IDMASTER.IDENTITYID LIKE U.WAREHOUSEID) AS WAREHOUSETEXT, 
			TRIM(U.WAREHOUSEID) AS WAREHOUSEID, U.WAREHOUSENAME, 
			IIF(U.MAJORACCOUNT = 'Y', 'Major Accts', 'Independents') AS MAJORTEXT, 
			NULLIF(U.MAJORACCOUNT, 'N') AS MAJORACCOUNT, U.MAJORGROUPNAME, 
			--SUM(U.RESERVEGROSS) AS RESERVEGROSS, 
			--SUM(U.RESERVEDISCOUNT) AS RESERVEDISCOUNT, 
			--SUM(U.RESERVEFREIGHT) AS RESERVEFREIGHT, 
			SUM(U.RESERVEGROSS+U.RESERVEDISCOUNT) AS RESERVENET, 
			--SUM(U.ORDERGROSS) AS ORDERGROSS, 
			--SUM(U.ORDERDISCOUNT) AS ORDERDISCOUNT, 
			--SUM(U.ORDERFREIGHT) AS ORDERFREIGHT, 
			SUM(U.ORDERGROSS+U.ORDERDISCOUNT) AS ORDERNET, 
			--SUM(U.ACTUALGROSS) AS ACTUALGROSS, 
			--SUM(U.ACTUALDISCOUNT) AS ACTUALDISCOUNT, 
			--SUM(U.ACTUALFREIGHT) AS ACTUALFREIGHT, 
			SUM(U.ACTUALGROSS+U.ACTUALDISCOUNT) AS ACTUALNET, 
			--SUM(U.GOALGROSS) AS GOALGROSS, 
			--SUM(U.GOALDISCOUNT) AS GOALDISCOUNT, 
			--SUM(U.GOALFREIGHT) AS GOALFREIGHT, 
			SUM(U.GOALGROSS+U.GOALDISCOUNT) AS GOALNET 
		FROM	( 
					SELECT 
						V.COMPANYID, 'Greenleaf Nursery Company' AS COMPANYNAME, V.RECORDTYPE, 
						V.SALEYEAR, V.PERIOD, V.TRANSACTIONDATE, 
						V.WAREHOUSEID, V.WAREHOUSENAME, 
						V.NATIONALACCOUNT AS MAJORACCOUNT, V.MAJORGROUPNAME, 
						0 AS RESERVEGROSS,	0 AS RESERVEDISCOUNT, --0 AS RESERVEFREIGHT, 
						0 AS ORDERGROSS, 0 AS ORDERDISCOUNT, --0 AS ORDERFREIGHT, 
						IIF(V.REPORTGROUP = 1, V.CURRAMOUNT, 0) AS ACTUALGROSS, 
						IIF(V.REPORTGROUP IN (2,3), V.CURRAMOUNT, 0) AS ACTUALDISCOUNT, 
						--IIF(V.REPORTGROUP = 4, V.CURRAMOUNT, 0) AS ACTUALFREIGHT, 
						IIF(V.REPORTGROUP = 1, V.GOALAMOUNT, 0) AS GOALGROSS, 
						IIF(V.REPORTGROUP IN (2,3), V.GOALAMOUNT, 0) AS GOALDISCOUNT--, 
						--IIF(V.REPORTGROUP = 4, V.GOALAMOUNT, 0) AS GOALFREIGHT 
					FROM VW_RPT_SQL_SALES2GOAL_MAJOR V (NOLOCK) 
					WHERE (V.CURRAMOUNT <> 0 OR V.GOALAMOUNT <> 0) 
					AND V.REPORTGROUP < 4 

					UNION ALL 

					SELECT 
						X.COMPANYID, X.COMPANYNAME, X.RECORDTYPE, 
						X.SALEYEAR, X.PERIOD, X.TRANSACTIONDATE, 
						X.WAREHOUSEID, X.WAREHOUSENAME, 
						X.MAJORACCOUNT, X.MAJORGROUPNAME, 
						--ADDDING SERVICECHARGE TO RESERVES AND ORDERS SO THAT SAM'S TOTALS ARE WHAT THEY EXPECT:
						X.ISRESERVE * ((X.UNITPRICE + X.SERVICECHARGE) * X.QUANTITYATSTAGE) AS RESERVEGROSS, 
						X.ISRESERVE * (((X.UNITPRICE + X.SERVICECHARGE) * X.QUANTITYATSTAGE) - X.AMOUNT) AS RESERVEDISCOUNT, 
						X.ISORDER * ((X.UNITPRICE + X.SERVICECHARGE) * X.QUANTITYATSTAGE) AS ORDERGROSS, 
						X.ISORDER * (((X.UNITPRICE + X.SERVICECHARGE) * X.QUANTITYATSTAGE) - X.AMOUNT) AS ORDERDISCOUNT, 
						--X.ISRESERVE * (X.UNITPRICE * X.QUANTITYATSTAGE) AS RESERVEGROSS, 
						--X.ISRESERVE * ((X.UNITPRICE * X.QUANTITYATSTAGE) - X.AMOUNT) AS RESERVEDISCOUNT, 
						--X.ISORDER * (X.UNITPRICE * X.QUANTITYATSTAGE) AS ORDERGROSS, 
						--X.ISORDER * ((X.UNITPRICE * X.QUANTITYATSTAGE) - X.AMOUNT) AS ORDERDISCOUNT, 
						--X.ISRESERVE * X.EFFECTIVEFREIGHT AS RESERVEFREIGHT, 
						--X.ISORDER * X.EFFECTIVEFREIGHT AS ORDERFREIGHT, 
						0 AS ACTUALGROSS, 0 AS ACTUALDISCOUNT, --0 AS ACTUALFREIGHT, 
						0 AS GOALGROSS, 0 AS GOALDISCOUNT--, --0 AS GOALFREIGHT 

					FROM	( 
								SELECT 
									CO.COMPANYID, CO.NAME AS COMPANYNAME, OH.RECORDTYPE, 
									DBO.FN_DATE2YEAR(OH.SHIPPINGDATE) AS SALEYEAR, 
									0 AS PERIOD, --DBO.FN_DATE2PERIOD(OH.SHIPPINGDATE) AS PERIOD, 
									NULL AS TRANSACTIONDATE, --OH.SHIPPINGDATE AS TRANSACTIONDATE, 
									WH.IDENTITYID AS WAREHOUSEID, 
									WH.NAME AS WAREHOUSENAME, 
									--TRIM(PART.IDENTITYID) AS SALESREPID, 
									--TRIM(PART.NAME) AS SALESREPNAME, 
									ICUST.USERDEFINEDCODE_8 AS MAJORACCOUNT, 
									IIF(ICUST.USERDEFINEDCODE_8 = 'Y', CUST.REFERENCE2, NULL) AS MAJORGROUPNAME, 
									IIF (OH.STAGE = 'N' AND OH.USERDEFINEDCODE_2 = 'RESERVE', 1, 0) AS ISRESERVE, 
									IIF (OH.STAGE = 'N' AND OH.USERDEFINEDCODE_2 = 'RESERVE', 0, 1) AS ISORDER, 
									ISNULL(OD.AMOUNT, 0) AS AMOUNT, 
									ISNULL(OD.UNITPRICE, 0) AS UNITPRICE, 
									ISNULL(OD.TAGGINGCHARGEPERITEM,0) AS SERVICECHARGE, 
									--ISNULL(OD.EFFECTIVEFREIGHT,0) AS EFFECTIVEFREIGHT, 
									IIF(CHARINDEX(OH.STAGE,'A;S;C')>0, ISNULL(OD.QUANTITYSHIPPED, 0), ISNULL(OD.QUANTITYORDERED, 0)) AS QUANTITYATSTAGE 
								FROM OMTRANSACTIONHEADER OH (NOLOCK) 
								JOIN OMTRANSACTIONDETAIL OD (NOLOCK) ON OD.R_TRANSACTIONHEADER = OH.ROWID 
								JOIN IDMASTER WH (NOLOCK) ON WH.ROWID = OH.R_FMSHIPPER 
								--JOIN IDMASTER PART (NOLOCK) ON PART.ROWID = OH.R_SALESPERSON_1 
								JOIN IDMASTER CUST (NOLOCK) ON CUST.ROWID = OH.R_CUSTOMER 
								JOIN IDCUSTOMER ICUST (NOLOCK) ON ICUST.R_IDENTITY = CUST.ROWID 
								JOIN ABCOMPANY CO (NOLOCK) ON CO.COMPANYID = OH.COMPANYID 
								WHERE OH.RECORDTYPE = 'R' AND OH.STAGE NOT IN ('L', 'F') AND OH.TRANSACTIONTYPE = 'I'
					) X 
				) U 

		GROUP BY 
			U.COMPANYID, U.COMPANYNAME, U.RECORDTYPE, 
			U.SALEYEAR, U.PERIOD, U.TRANSACTIONDATE, --CAST(TRANSACTIONDATE AS DATE) IS DONE IN: VW_RPT_SQL_SALES2GOAL_MAJOR SO NO NEED TO DO SO HERE. 
			U.WAREHOUSEID, U.WAREHOUSENAME, 
			U.MAJORACCOUNT, U.MAJORGROUPNAME 
		) R 
