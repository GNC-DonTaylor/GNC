/* 
--STATEMENTS EXCEL 
SELECT * 
FROM VW_RPT_STATEMENT (NOLOCK) 
WHERE CUSTOMERIDENTITYID = '55276' 
WHERE 1 = 1 --CHANGED TO NO LONGER SELECT FOR RECORDTYPE = 'U' (This gives CrMgr's ability to have Customer Account History per Carin Hodson 12/2/21) - DT 
------ 

--STATEMENTS 
SELECT *, 
	IIF(CURRENTDAYSDUE <= 0, BALANCE, 0.00) AS BUCKET1, 
	IIF(CURRENTDAYSDUE BETWEEN 1 AND 30, BALANCE, 0.00) AS BUCKET2, 
	IIF(CURRENTDAYSDUE BETWEEN 31 AND 60, BALANCE, 0.00) AS BUCKET3, 
	IIF(CURRENTDAYSDUE BETWEEN 61 AND 90, BALANCE, 0.00) AS BUCKET4, 
	IIF(CURRENTDAYSDUE BETWEEN 91 AND 120, BALANCE, 0.00) AS BUCKET5, 
	IIF(CURRENTDAYSDUE > 120, BALANCE, 0.00) AS BUCKET6 
FROM VW_RPT_STATEMENT (NOLOCK) 
WHERE RECORDTYPE = 'U' 

--MONTH END STATEMENTS 
SELECT *, 
	IIF(PERIODDAYSDUE <= 0, BALANCE, 0.00) AS BUCKET1, 
	IIF(PERIODDAYSDUE BETWEEN 1 AND 30, BALANCE, 0.00) AS BUCKET2, 
	IIF(PERIODDAYSDUE BETWEEN 31 AND 60, BALANCE, 0.00) AS BUCKET3, 
	IIF(PERIODDAYSDUE BETWEEN 61 AND 90, BALANCE, 0.00) AS BUCKET4, 
	IIF(PERIODDAYSDUE BETWEEN 91 AND 120, BALANCE, 0.00) AS BUCKET5, 
	IIF(PERIODDAYSDUE > 120, BALANCE, 0.00) AS BUCKET6 
FROM VW_RPT_STATEMENT (NOLOCK) 
WHERE RECORDTYPE = 'U' 
-------------------------------- 
and customeridentityid = 'MC10171'--'55276'--'10022'--'mc10422'-- 

--AR DAILY AGING BY SALESREP	(--AR DETAIL AGING BY SALESPERSON) 
SELECT *, 
	IIF(CURRENTDAYSDUE <= 0, BALANCE, 0.00) AS BUCKET1, 
	IIF(CURRENTDAYSDUE BETWEEN 1 AND 30, BALANCE, 0.00) AS BUCKET2, 
	IIF(CURRENTDAYSDUE BETWEEN 31 AND 60, BALANCE, 0.00) AS BUCKET3, 
	IIF(CURRENTDAYSDUE BETWEEN 61 AND 90, BALANCE, 0.00) AS BUCKET4, 
	IIF(CURRENTDAYSDUE BETWEEN 91 AND 120, BALANCE, 0.00) AS BUCKET5, 
	IIF(CURRENTDAYSDUE > 120, BALANCE, 0.00) AS BUCKET6 
FROM VW_RPT_STATEMENT (NOLOCK) 
WHERE RECORDTYPE = 'U' 

--AR MONTHEND AGING BY SALESREP	(--AR DETAIL AGING BY SALESPERSON) 
SELECT *, 
	IIF(PERIODDAYSDUE <= 0, BALANCE, 0.00) AS BUCKET1, 
	IIF(PERIODDAYSDUE BETWEEN 1 AND 30, BALANCE, 0.00) AS BUCKET2, 
	IIF(PERIODDAYSDUE BETWEEN 31 AND 60, BALANCE, 0.00) AS BUCKET3, 
	IIF(PERIODDAYSDUE BETWEEN 61 AND 90, BALANCE, 0.00) AS BUCKET4, 
	IIF(PERIODDAYSDUE BETWEEN 91 AND 120, BALANCE, 0.00) AS BUCKET5, 
	IIF(PERIODDAYSDUE > 120, BALANCE, 0.00) AS BUCKET6 
FROM VW_RPT_STATEMENT (NOLOCK) 
WHERE RECORDTYPE = 'U' 

--EXTENDED DELAYED BILLING - Shelly 
SELECT *, 
	CEILING(IIF(PERIODDAYSDUE>121,121,IIF(PERIODDAYSDUE<0,0,PERIODDAYSDUE))/30.)+1 AS AGINGBUCKET, 
	IIF(PERIODDAYSDUE <= 0, BALANCE, 0.00) AS BUCKET1, 
	IIF(PERIODDAYSDUE BETWEEN 1 AND 30, BALANCE, 0.00) AS BUCKET2, 
	IIF(PERIODDAYSDUE BETWEEN 31 AND 60, BALANCE, 0.00) AS BUCKET3, 
	IIF(PERIODDAYSDUE BETWEEN 61 AND 90, BALANCE, 0.00) AS BUCKET4, 
	IIF(PERIODDAYSDUE BETWEEN 91 AND 120, BALANCE, 0.00) AS BUCKET5, 
	IIF(PERIODDAYSDUE > 120, BALANCE, 0.00) AS BUCKET6 
FROM VW_RPT_STATEMENT (NOLOCK) 
WHERE RECORDTYPE = 'U' 
AND CUSTOMERIDENTITYID = '10019' 
------------------------------------------------------- 
DECLARE @OFFSET INT 
SET @OFFSET = 0--315 

Possible variations on the theme: 
--------------------------------------------- 
--STATEMENT				(USES CURRENT SYSTEMDATE) 
SELECT GETDATE()-@OFFSET AS LIVESYSTEMDATE 
--MONTH END STATEMENT	(USES PREVIOUS FISCALPERIODENDDATE) 
SELECT TOP 1 ENDINGDATE AS FISCALPERIODENDDATE FROM ACFISCALPERIOD (NOLOCK) WHERE GETDATE()-@OFFSET >= ENDINGDATE ORDER BY ENDINGDATE DESC 
^--I should make a function: FISCALPERIODENDDATE({ASOFDATE}), MAYBE, MAYBE NOT... 


This code makes it possible to LEFT JOIN ACFISCALPERIOD when including all of the logic: 
--------------------------------------------- 
SELECT ED.ENDINGDATE  
FROM ACFISCALPERIOD ED (NOLOCK) 
WHERE ED.FISCALYEAR = (	SELECT IIF(FY.FISCALPERIOD=1, FY.FISCALYEAR-1, FY.FISCALYEAR) FROM ACFISCALPERIOD FY (NOLOCK) 
						WHERE GETDATE()-@OFFSET BETWEEN FY.STARTINGDATE AND FY.ENDINGDATE	) 
AND ED.FISCALPERIOD = (	SELECT IIF(FP.FISCALPERIOD=1,	
								(	SELECT TOP 1 FP2.FISCALPERIOD FROM ACFISCALPERIOD FP2 
									WHERE FP2.FISCALYEAR = ED.FISCALYEAR-1 ORDER BY FP2.FISCALPERIOD DESC 
								), FP.FISCALPERIOD-1) 
						FROM ACFISCALPERIOD FP (NOLOCK) 
						WHERE GETDATE()-@OFFSET BETWEEN FP.STARTINGDATE AND FP.ENDINGDATE) 
AND GETDATE()-@OFFSET >= ED.ENDINGDATE 
------------------------------------------------------- 

*/ 
CREATE OR ALTER VIEW [DBO].[VW_RPT_STATEMENT] 
AS 
SELECT	REMITTO.REMIT, 
		FP.FISCALPERIODENDDATE, 
		--GIVING ERROR: Arithmetic overflow error converting expression to data type datetime. WHEN REPORT WAS RAN WIDE-OPEN. (NULL TRANSACTIONDUEDATES)
		--CAST (FP.FISCALPERIODENDDATE - TRANSACTIONDUEDATE AS INT) AS PERIODDAYSDUE, 
		--CAST (GETDATE() - TRANSACTIONDUEDATE AS INT) AS CURRENTDAYSDUE, 
		--USED DATEDIFF FUNCTION TO PREVENT ERRORS FOR WIDE-OPEN DATASET
		DATEDIFF(DAY, Y.TRANSACTIONDUEDATE, FP.FISCALPERIODENDDATE) AS PERIODDAYSDUE, 
		DATEDIFF(DAY, Y.TRANSACTIONDUEDATE, GETDATE()) AS CURRENTDAYSDUE, 
		Y.* 
FROM	(	
		SELECT	IIF(MCROWID IS NULL, ISNULL(CONSIGNEEID, CUSTIDENTITYID), CUSTIDENTITYID) AS BREAKID, 
				IIF(MCROWID IS NULL, ISNULL(CONSIGNEENAME, CUSTNAME), CUSTNAME) AS BREAKNAME, 
				IDTERMS.TERMSCODE, 
				IDTERMS.DESCRIPTION_1 AS TERMSDESCRIPTION, 
				IDTERMS.STATEMENTCOMMENT, 
				VCUST.CUSTOMERIDENTITYID, 
				VCUST.CUSTOMERNAME, 
				TRIM(VCUST.CUSTOMERIDGROUP) AS CUSTOMERIDGROUP, 
				VCUST.CUSTOMERADDRESSMEMO, 
				VCUST.CUSTOMERADDRESS_1, 
				VCUST.CUSTOMERADDRESS_2, 
				VCUST.CUSTOMERCITY, 
				VCUST.CUSTOMERSTATE, 
				VCUST.CUSTOMERZIP, 
				VCUST.CUSTOMERCOUNTRY, 
				(	SELECT MC.IDENTITYID 
					FROM IDMASTER MC (NOLOCK)
					WHERE MC.ROWID = MCROWID--DBO.FN_MASTERCUSTOMER(CUST.ROWID,'I') 
					) AS MASTERCUSTOMERID, 
				IIF(MCROWID IS NULL, 'N', 'Y') AS MASTERCUSTOMERFLAG, 
				VCUST.CUSTOMERUSERDEFINEDCODE_4 AS SENDSTATEMENTS, --MASTERCUSTOMER OVERRIDES THIS FLAG NOW PER AR REQUEST. 8/2/23 DT
				VCUST.CUSTOMERUSERDEFINEDCODE_8 AS MAJORACCOUNTFLAG, --ADD MAJORACCOUNTFLAG PER TREE REQUEST. 3/4/24 DT
				X.*, 
				--CHANGED LOGIC TO ALWAYS PUT POSITIVE AMOUNTS IN DEBIT COLUMN AND NEGATIVE AMOUNTS IN CREDIT COLUMN: 
				IIF(AMOUNT*REVSIGN > 0, AMOUNT*REVSIGN, 0.00) AS DEBIT, 
				IIF(AMOUNT*REVSIGN < 0, AMOUNT*REVSIGN, 0.00) AS CREDIT, 
				--IIF(REVSIGN = 1, AMOUNT, 0.00) AS DEBIT, 
				--IIF(REVSIGN = -1, AMOUNT*REVSIGN, 0.00) AS CREDIT, 
				OUTSTANDING * REVSIGN AS BALANCE, 
				IIF(MCROWID IS NOT NULL, 1,	--SPECIAL OVERRIDE OF CUSTOMERBALANCE WHEN DEALING WITH A MASTERCUSTOMER SO ALL CUSTOMERS ARE INCLUDED AS A UNIT
				(	SELECT SUM((ARINV2.AMOUNT - ARINV2.AMOUNTAPPLIED_COMMITTED_ONLY - ARINV2.DISCOUNTTAKEN_COMMITTED_ONLY) 
								* IIF(AH2.TRANSACTIONTYPE IN ('A','C'), -1, 1)) 
					FROM AROPENITEMHEADER AH2 (NOLOCK) 
					LEFT JOIN VW_ARGETOUTSTANDINGINVOICE ARINV2 (NOLOCK) ON	ARINV2.ROWID = AH2.ROWID 
																		AND ARINV2.ROWID IS NOT NULL 
					WHERE AH2.R_CUSTOMER = CUSTROWID) ) AS CUSTOMERBALANCE 
/* 
					ARINV.AMOUNT - ARINV.AMOUNTAPPLIED_COMMITTED_ONLY - ARINV.DISCOUNTTAKEN_COMMITTED_ONLY AS OUTSTANDING, 
					IIF(AH.TRANSACTIONTYPE IN ('A','C'), -1, 1) AS REVSIGN,	--REVERSE THE SIGN FOR ADJUSTMENTS AND CREDITS 
					CUST.IDENTITYID AS CUSTIDENTITYID, 
				FROM AROPENITEMHEADER AH (NOLOCK) 
				LEFT JOIN IDMASTER CUST (NOLOCK) ON CUST.ROWID = AH.R_CUSTOMER 
				LEFT JOIN VW_ARGETOUTSTANDINGINVOICE ARINV (NOLOCK) ON ARINV.ROWID = AH.ROWID AND ARINV.ROWID IS NOT NULL 
*/ 
		FROM	( 
				SELECT 
					CO.COMPANYID, 
					CO.NAME AS COMPANYNAME, 
					AH.RECORDTYPE, 
					VWH.SHIPPERADDRESSMEMO, 
					VWH.SHIPPERADDRESS_1, 
					VWH.SHIPPERCITY, 
					VWH.SHIPPERSTATE, 
					VWH.SHIPPERZIP, 
					'DUNN & BRADSTREET #03-299-2778' AS COMPANYDUNNS, 
					
					--SAVE MCROWID AND CUSTROWID TO BE USED LATER: 
					DBO.FN_MASTERCUSTOMER(CUST.ROWID,'I') AS MCROWID,	--RUN FUNCTION WITH INCLUSIVE FLAG ACTIVE 
					CUST.ROWID AS CUSTROWID, 
					
					CUST.IDENTITYID AS CUSTIDENTITYID, 
					CUST.NAME AS CUSTNAME, 
					TRIM(CUST.IDGROUP) AS CUSTIDGROUP, 
					AH.TRANSACTIONDATE, 
					AH.TRANSACTIONDUEDATE, 
					AH.TRANSACTIONTYPE, 
					(	SELECT FLAGDESCRIPTION 
						FROM ABFLAGFIELD (NOLOCK)
						WHERE TABLENAME = 'AROPENITEMHEADER' 
						AND FIELDNAME = 'TRANSACTIONTYPE' 
						AND FLAGVALUE = AH.TRANSACTIONTYPE 
						) AS TRANSACTIONTYPEDESCRIPTION, 

					TRIM(CRMGR.IDENTITYID) AS CREDITMANAGERID, 
					TRIM(CRMGR.NAME) AS CREDITMANAGERNAME, 
					CRMGR.REFERENCE1 AS DIVISIONRESPONSIBILITY, 
					ISNULL(ISNULL(WH.IDENTITYID, CAST (EPLANT.DIVISIONNUMBER AS VARCHAR(12))), CRMGR.REFERENCE1) AS WAREHOUSEID, 

					AH.TRANSACTIONNUMBER, 
					(SELECT TOP 1 OH.PURCHASEORDERNUMBER FROM OMTRANSACTIONHEADER OH (NOLOCK) WHERE OH.TRANSACTIONNUMBER = AH.TRANSACTIONNUMBER) AS PONUMBER, 
					AH.REFERENCENUMBER, 
					AH.DESCRIPTION, 
					AH.INVOICENUMBER, 
					ARPAY.CHECKNUMBER, 
					ARINV.AMOUNT, 
					ARINV.AMOUNTAPPLIED_COMMITTED_ONLY + ARINV.DISCOUNTTAKEN_COMMITTED_ONLY AS PAYMENT, 
					ARINV.AMOUNT - ARINV.AMOUNTAPPLIED_COMMITTED_ONLY - ARINV.DISCOUNTTAKEN_COMMITTED_ONLY AS OUTSTANDING, 
					IIF(AH.TRANSACTIONTYPE IN ('A','C'), -1, 1) AS REVSIGN,	--REVERSE THE SIGN FOR ADJUSTMENTS AND CREDITS 
					AH.USERDEFINEDCODE_1 AS SLSRP, 
					EPLANT.SALEYEAR, 
					OH.TRANSACTIONNUMBER AS ITRANS, 
					EPLANT.INVOICENUMBER AS ETRANS, 
					ISNULL(OH.TRANSACTIONNUMBER, EPLANT.INVOICENUMBER) AS OHTRANSACTION, 
					
					--ADDING TRANSACTION AMOUNT & PAYMENT SO STATEMENT EXCEL CAN REPORT CUSTOMER ACCOUNT HISTORY FOR PAID ITEMS: 
					(	SELECT SUM(AMOUNT) * IIF(AH.TRANSACTIONTYPE IN ('A','C'), -1, 1) 
						FROM AROPENITEMDETAIL AD (NOLOCK) 
						WHERE AD.R_AROPENITEM = AH.ROWID 
						) AS TRANSACTIONAMOUNT,	
					ISNULL	(	ARINV.AMOUNTAPPLIED_COMMITTED_ONLY + ARINV.DISCOUNTTAKEN_COMMITTED_ONLY, 
								(SELECT SUM(AMOUNT) * IIF(AH.TRANSACTIONTYPE IN ('A','C'), -1, 1) 
								 FROM AROPENITEMDETAIL AD (NOLOCK) WHERE AD.R_AROPENITEM = AH.ROWID) 
							) AS TRANSACTIONPAYMENT, 
					------- 

					ISNULL(VCONS.CONSIGNEEIDENTITYID, EPLANT.CUSTOMERNUMBER) AS CONSIGNEEID, 
					ISNULL(VCONS.CONSIGNEENAME, EPLANT.CUSTOMERNAME) AS CONSIGNEENAME, 
					--ISNULL(PART.IDENTITYID, EPLANT.SALESREPID) AS SALESREPID, 
					--ISNULL(PART.NAME, EPLANT.SALESREPNAME) AS SALESREPNAME, 
					ISNULL(ISNULL(PART.IDENTITYID, EPLANT.SALESREPID),'UC') AS SALESREPID, 
					ISNULL(ISNULL(PART.NAME, EPLANT.SALESREPNAME),'Unapplied Cash') AS SALESREPNAME, 
					VCONS.CONSIGNEEUSERDEFINEDCODE_10 AS STORENUMBER, 


--					ICUST.USERDEFINEDCODE_4 AS SENDSTATEMENTS, --moved this field into Y section to let mastercustomer override sendstatements flag.
					ICUST.CREDITRATING, 
					(SELECT DESCRIPTION_1 FROM IDCODES (NOLOCK) WHERE CODETYPE = 'ZZ' AND CODE = ICUST.CREDITRATING) AS CREDITRATINGDESC 
		
				FROM AROPENITEMHEADER AH (NOLOCK) 
				LEFT JOIN GNC_INVCRDB_ALL EPLANT (NOLOCK) ON EPLANT.INVOICENUMBER = AH.TRANSACTIONNUMBER 
				LEFT JOIN OMTRANSACTIONHEADER OH (NOLOCK) ON OH.ROWID = AH.R_SOURCEID AND AH.SOURCETABLENAME = 'OMTRANSACTIONHEADER' 
				LEFT JOIN IDMASTER CUST (NOLOCK) ON CUST.ROWID = AH.R_CUSTOMER 
				LEFT JOIN IDCUSTOMER ICUST (NOLOCK) ON ICUST.R_IDENTITY = CUST.ROWID 
				LEFT JOIN VW_IDCONSIGNEEVIEW VCONS (NOLOCK) ON VCONS.CONSIGNEEMASTERROWID = ISNULL(OH.R_SHIPPER, CUST.ROWID) -->I added the ISNULL to include access to SalesrepID field when AR doesn't supply the OMSource which cuts off the Consignee and Salesrep access. Hoping this doesn't introduce other issues.
				LEFT JOIN IDMASTER PART (NOLOCK) ON PART.ROWID = ISNULL(OH.R_SALESPERSON_1, VCONS.CONSIGNEER_PARTICIPANT) 

				LEFT JOIN VW_ARGETOUTSTANDINGINVOICE ARINV (NOLOCK) ON ARINV.ROWID = AH.ROWID AND ARINV.ROWID IS NOT NULL 
				LEFT JOIN ABCOMPANY CO (NOLOCK) ON CO.COMPANYID = AH.COMPANYID 
				LEFT JOIN VW_IDSHIPPERVIEW VWH (NOLOCK) ON VWH.SHIPPERIDENTITYID = '10' 
				LEFT JOIN ARCASHRECEIPTSPAYMENTS ARPAY (NOLOCK) ON ARPAY.SOURCETABLENAME = 'AROPENITEMHEADER' AND ARPAY.R_SOURCEID = AH.ROWID 
				LEFT JOIN IDMASTER CRMGR (NOLOCK) ON CRMGR.ROWID = CUST.R_CONTACT 
				LEFT JOIN IDMASTER WH (NOLOCK) ON WH.ROWID = OH.R_FMSHIPPER 
				WHERE /*AH.RECORDTYPE = 'U' AND*/ AH.MODULE = 'AR' 
				) X 

		--THIS WAS RETURNING MULTIPLE RECORDS BECAUSE IT WASN'T BASED ON ROWID: 
		--LEFT JOIN VW_IDCUSTOMERVIEW VCUST (NOLOCK) ON VCUST.CUSTOMERIDENTITYID = IIF(MASTERCUSTOMERID IS NULL, CUSTIDENTITYID, MASTERCUSTOMERID) 
		LEFT JOIN VW_IDCUSTOMERVIEW VCUST (NOLOCK) ON VCUST.CustomerMasterRowID = ISNULL(MCROWID, CUSTROWID) 
		LEFT JOIN IDTERMS (NOLOCK) ON IDTERMS.ROWID = VCUST.CUSTOMERR_TERMS 
		) Y,	(SELECT DBO.FN_REMITTOADDRESS(NULL) AS REMIT) REMITTO, 
				--THIS IS THE MAGICAL DATE TO BASE MONTH END AGING OFF OF: 
				(	SELECT TOP 1 ENDINGDATE AS FISCALPERIODENDDATE FROM ACFISCALPERIOD (NOLOCK)
					WHERE GETDATE() >= ENDINGDATE ORDER BY ENDINGDATE DESC 
				) FP	--THIS ACTUALLY RETURNS ENDINGDATE OF PREVIOUS FISCALPERIOD WHICH IS WHAT WE WANT. 



