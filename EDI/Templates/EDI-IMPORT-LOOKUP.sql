--EDI-IMPORT-LOOKUP 
Declare 
/*
	@VIOLATION Varchar(50), --= 'NOT NULL', 
    @POTYPE Varchar(20) = 'NEW', 
	@PORESERVENUMBER Varchar(30) = 'NOT NEEDED', 
    @Companyid Char(2) = 'SB', 
	@PROFILECODE Varchar(20) = 'z10.23.S1', 
	@ZONEOVERRIDE Varchar(20), 
	@WAREHOUSEID  Varchar(20) = '60', 
	@CUSTOMERID  Varchar(20) = '10535', 
	@CONSIGNEEID Varchar(20) = '829194', 
	@PURCHASEORDERNUMBER Varchar(20) = '283249332', 
	@POSTORENUMBER Varchar(50) = '34', 
	@POGLN Varchar(50),	
	@WORKORDER Varchar(50),	
	@SHIPNOTBEFOREDATE Varchar(50) = '2023-04-10 00:00:00.000', 	
	@SHIPNOTAFTERDATE Varchar(50) = '2023-04-11 00:00:00.000', 
	@ORDEREDBY Varchar(50) = 'Kathy Koral', 
	@REQUESTDATE Varchar(50) = '2023-04-10 21:35:49.490', 
	@REQUESTDATETYPE Varchar(10) = 'WEEK OF', 
	@ORDERSHIPPINGINSTRUCTIONS VARCHAR(8000) = 'EXAMPLE COMMENT', 
	@ItemCode Varchar(20) = '001884.031.1', 
	@LineNumber INT = 5, 
*/
	@NEWID UNIQUEIDENTIFIER 
IF (ISNULL(@VIOLATION,'') <> '') 
BEGIN 
	RAISERROR('VIOLATION IS NOT NULL', 16, 1) 
	RETURN 
END 
IF (ISNULL(@POTYPE,'') <> 'NEW') 
BEGIN 
	RAISERROR('PO TYPE IS NOT ''NEW''', 16, 1) 
	RETURN 
END 

--IF THE RAISERROR ABOVE STOPS PROCESSING WHEN @POTYPE IS NOT NEW THEN ROWID WILL ALWAYS BE NULL THE FIRST TIME THROUGH BUT PICKUP THE ROWID FOR EACH SUBSEQUENT PASS: 
--FIND OUT IF ORDERHEADER 'R' RECORD ALREADY EXISTS AND RETURN THE ROWID: 
--(VALIDATE COMPANYID, PO#, WAREHOUSEID, CUSTOMERID, CONSIGNEEID, STORENUMBER AND R_ORIGINALTRANSACTION TO ELIMINATE FALSE HITS.) 
SELECT @NEWID = OH.ROWID 
--OH.ROWID, OH.PURCHASEORDERNUMBER, WH.IDENTITYID AS WAREHOUSEID, CUST.IDENTITYID AS CUSTOMERID, CONS.IDENTITYID AS CONSIGNEEID, ICONS.USERDEFINEDREFERENCE_2 AS STORENUMBER, OH.R_ORIGINALTRANSACTION AS SPLITORDER_ROWID 
FROM OMTRANSACTIONHEADER OH (NOLOCK) 
JOIN IDMASTER WH (NOLOCK) ON WH.ROWID = OH.R_FMSHIPPER 
JOIN IDMASTER CUST (NOLOCK) ON CUST.ROWID = OH.R_CUSTOMER 
JOIN IDMASTER CONS (NOLOCK) ON CONS.ROWID = OH.R_SHIPPER 
JOIN IDCONSIGNEE ICONS (NOLOCK) ON ICONS.R_IDENTITY = CONS.ROWID 
WHERE OH.RECORDTYPE = 'Z'--'R' 
AND OH.COMPANYID = @Companyid											--'SB' 
AND OH.PURCHASEORDERNUMBER = @PURCHASEORDERNUMBER						--'283249332' 
AND WH.IDENTITYID = @WAREHOUSEID										--'10' 
AND CUST.IDENTITYID = @CUSTOMERID										--'10535' 
AND CONS.IDENTITYID = @CONSIGNEEID										--'829194' 
AND ICONS.USERDEFINEDREFERENCE_2 = RIGHT('0000'+TRIM(@POSTORENUMBER),4)	--'34' 
AND R_ORIGINALTRANSACTION IS NULL										--ENSURES THIS ISN'T A SPLIT ORDER 

IF (ISNULL(@NEWID, '') = '') 
BEGIN 
SET @NEWID = NEWID() 

INSERT INTO OMTRANSACTIONHEADER ( 
	ROWID, 
	CREATIONDATETIME, 
	CREATIONUSERID, 
	LASTUPDATEDATETIME, 
	LASTUPDATEUSERID, 
	COMPANYID, 
	MODULE, 
	RECORDTYPE, 
	R_PROFILE, 
	R_CUSTOMER, 
	TRANSACTIONTYPE, 
	PURCHASEORDERNUMBER, 
	COMMENT, 
	R_SHIPPER, 
	SHIPPINGDATE, 
	USERDEFINEDCODE_1, 
	USERDEFINEDREFERENCE_3, 
	USERDEFINEDREFERENCE_4, 
	R_FMSHIPPER, 
	USERDEFINEDDATE_19, 
	USERDEFINEDDATE_20, 
	USERDEFINEDREFERENCE_19, 
	USERDEFINEDREFERENCE_20, 
	R_ZONEFREIGHTRATEOVERRIDE 
	) 
	SELECT 
		@NEWID AS ROWID, 
		GETDATE() AS CREATIONDATETIME, 
		'sa' AS CREATIONUSER, 
		GETDATE() AS UPDATEDATETIME, 
		'sa' AS UPDATEUSER, 
		@Companyid AS COMPANYID, 
		'OM' AS MODULE, 
		'R' AS RECORDTYPE, 
		(SELECT ROWID FROM OMTRANSACTIONDP WHERE PROFILECODE = @PROFILECODE AND COMPANYID = @Companyid) AS R_PROFILE, 
		(SELECT ROWID FROM IDMASTER WHERE IDENTITYID = @CUSTOMERID AND COMPANYID = @Companyid) AS R_CUSTOMER, 
		'I' AS TRANSACTIONTYPE, 
		@PURCHASEORDERNUMBER AS PURCHASEORDERNUMBER, 
		@ORDERSHIPPINGINSTRUCTIONS AS COMMENT, 
		(SELECT ROWID FROM IDMASTER WHERE IDENTITYID = @CONSIGNEEID AND COMPANYID = @Companyid) AS R_SHIPPER, 
		CAST(@REQUESTDATE as datetime) AS SHIPPINGDATE, 
		@REQUESTDATETYPE AS USERDEFINEDCODE_1, 
		@ORDEREDBY AS USERDEFINEDREFERENCE_3, 
		@WORKORDER AS USERDEFINEDREFERENCE_4, 
		(SELECT ROWID FROM IDMASTER WHERE IDENTITYID = @WAREHOUSEID AND COMPANYID = @Companyid) AS R_FMSHIPPER, 
		CAST(@SHIPNOTBEFOREDATE as datetime) AS USERDEFINEDDATE_19, 
		CAST(@SHIPNOTAFTERDATE as datetime) AS USERDEFINEDDATE_20, 
		@POSTORENUMBER AS USERDEFINEDREFERENCE_19, 
		@POGLN AS USERDEFINEDREFERENCE_20, 
		(SELECT ROWID FROM RTZONETABLECODES WHERE CODE = @ZONEOVERRIDE AND COMPANYID =  Companyid) AS R_ZONEFREIGHTRATEOVERRIDE 
END 

Declare @ItemCodeRowID Varchar(38) 

--INCREMENT LINENUMBER IF NOT PROVIDED.
IF(ISNULL(@LineNumber, 0) = 0 AND ISNULL(@NEWID, '00000000-0000-0000-0000-000000000000') <> '00000000-0000-0000-0000-000000000000' )	--IF NO LINENUMBER AND NEWID IS NOT NULL: 
BEGIN 
SELECT @LineNumber = MAX(CAST(ISNULL(LINENUMBER, 0) AS Int)) + 1  FROM OMTRANSACTIONDETAIL	--FIND THE NEXT AVAILABLE LINENUMBER IN THE ORDERDETAIL 
WHERE R_TRANSACTIONHEADER = @NEWID 
END 

Select @ItemCodeRowID  = IMITEM.RowID 
FROM IMITEM 
WHERE IMITEM.CompanyID = @Companyid 
AND IMITEM.ITEMCODE = Trim(@ItemCode) 
AND IMITEM.R_WAREHOUSE = (SELECT ROWID FROM IDMASTER WH (NOLOCK) WHERE WH.IDENTITYID = @WAREHOUSEID) 

SELECT @NEWID AS OMHDRID, @ItemCodeRowID as ItemCodeRowID, @LineNumber AS LN 
